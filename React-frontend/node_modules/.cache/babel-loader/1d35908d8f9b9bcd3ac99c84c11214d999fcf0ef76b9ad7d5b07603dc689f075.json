{"ast":null,"code":"var _jsxFileName = \"E:\\\\Attendance SAAS\\\\attendance-tracker-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography } from '@mui/material';\nimport { auth, googleProvider, signInWithPopup } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in when component mounts\n    const checkUser = auth.currentUser;\n    if (checkUser) {\n      navigate('/dashboard'); // Redirect to dashboard if already logged in\n    }\n  }, [navigate]);\n  const handleLogin = async () => {\n    setLoading(true); // Show loading spinner\n    try {\n      // Trigger the Google login popup\n      const result = await signInWithPopup(auth, googleProvider); // Firebase authentication\n      const user = result.user;\n\n      // Prepare user data for backend (Spring Boot)\n      const userData = {\n        googleAuthId: user.uid,\n        name: user.displayName\n      };\n\n      // Send user data to the backend (Spring Boot) to create or fetch user\n      const response = await axios.post('http://localhost:18/api/user/signup', userData);\n      if (response.status === 200) {\n        // Store user data in local storage or context\n        // Function to save user data (e.g., in local storage or context)\n\n        // Redirect to dashboard after successful login and user creation\n        navigate('/dashboard');\n      } else {\n        setError('Failed to create user. Please try again.');\n      }\n    } catch (error) {\n      // Handle Firebase errors (like popup being blocked or network issues)\n      console.error('Login error:', error);\n      if (error.code === 'auth/popup-closed-by-user') {\n        setError('Login popup was closed. Please try again.');\n      } else if (error.response) {\n        // Handle backend errors if any (e.g., 404 or 500)\n        setError(`Backend error: ${error.response.data.message}`);\n      } else {\n        setError('Failed to log in. Please try again.');\n      }\n    } finally {\n      setLoading(false); // Hide loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogin,\n        disabled: loading,\n        style: {\n          padding: '10px 30px'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          style: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this) : 'Login with Google'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      style: {\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"H+4YzR0wGzdyEId/VnfukG3Kr/A=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useEffect","useState","Button","CircularProgress","Typography","auth","googleProvider","signInWithPopup","useNavigate","axios","jsxDEV","_jsxDEV","LoginComponent","_s","loading","setLoading","error","setError","navigate","checkUser","currentUser","handleLogin","result","user","userData","googleAuthId","uid","name","displayName","response","post","status","console","code","data","message","style","textAlign","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","padding","size","_c","$RefreshReg$"],"sources":["E:/Attendance SAAS/attendance-tracker-frontend/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography } from '@mui/material';\nimport { auth, googleProvider, signInWithPopup } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\n\n\nconst LoginComponent = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    \n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Check if user is already logged in when component mounts\n        const checkUser = auth.currentUser;\n        if (checkUser) {\n            navigate('/dashboard'); // Redirect to dashboard if already logged in\n        }\n    }, [navigate]);\n\n    const handleLogin = async () => {\n        setLoading(true); // Show loading spinner\n        try {\n            // Trigger the Google login popup\n            const result = await signInWithPopup(auth, googleProvider); // Firebase authentication\n            const user = result.user;\n\n            // Prepare user data for backend (Spring Boot)\n            const userData = {\n                googleAuthId: user.uid,\n                name: user.displayName,\n                \n            };\n\n            // Send user data to the backend (Spring Boot) to create or fetch user\n            const response = await axios.post('http://localhost:18/api/user/signup', userData);\n\n            if (response.status === 200) {\n                // Store user data in local storage or context\n                 // Function to save user data (e.g., in local storage or context)\n\n                // Redirect to dashboard after successful login and user creation\n                navigate('/dashboard');\n            } else {\n                setError('Failed to create user. Please try again.');\n            }\n        } catch (error) {\n            // Handle Firebase errors (like popup being blocked or network issues)\n            console.error('Login error:', error);\n            if (error.code === 'auth/popup-closed-by-user') {\n                setError('Login popup was closed. Please try again.');\n            } else if (error.response) {\n                // Handle backend errors if any (e.g., 404 or 500)\n                setError(`Backend error: ${error.response.data.message}`);\n            } else {\n                setError('Failed to log in. Please try again.');\n            }\n        } finally {\n            setLoading(false); // Hide loading spinner\n        }\n    };\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n            <Typography variant=\"h4\">Login to Your Account</Typography>\n            <div style={{ marginTop: '20px' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleLogin}\n                    disabled={loading}\n                    style={{ padding: '10px 30px' }}\n                >\n                    {loading ? (\n                        <CircularProgress size={24} style={{ color: 'white' }} />\n                    ) : (\n                        'Login with Google'\n                    )}\n                </Button>\n            </div>\n            {error && (\n                <Typography color=\"error\" style={{ marginTop: '20px' }}>\n                    {error}\n                </Typography>\n            )}\n        </div>\n    );\n};\n\nexport default LoginComponent;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,gBAAgB,EAAEC,UAAU,QAAQ,eAAe;AACpE,SAASC,IAAI,EAAEC,cAAc,EAAEC,eAAe,QAAQ,aAAa,CAAC,CAAC;AACrE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAG3B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BR,SAAS,CAAC,MAAM;IACZ;IACA,MAAMmB,SAAS,GAAGd,IAAI,CAACe,WAAW;IAClC,IAAID,SAAS,EAAE;MACXD,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEd,MAAMG,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5BN,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,IAAI;MACA;MACA,MAAMO,MAAM,GAAG,MAAMf,eAAe,CAACF,IAAI,EAAEC,cAAc,CAAC,CAAC,CAAC;MAC5D,MAAMiB,IAAI,GAAGD,MAAM,CAACC,IAAI;;MAExB;MACA,MAAMC,QAAQ,GAAG;QACbC,YAAY,EAAEF,IAAI,CAACG,GAAG;QACtBC,IAAI,EAAEJ,IAAI,CAACK;MAEf,CAAC;;MAED;MACA,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,IAAI,CAAC,qCAAqC,EAAEN,QAAQ,CAAC;MAElF,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;QACzB;QACC;;QAED;QACAb,QAAQ,CAAC,YAAY,CAAC;MAC1B,CAAC,MAAM;QACHD,QAAQ,CAAC,0CAA0C,CAAC;MACxD;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZ;MACAgB,OAAO,CAAChB,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;MACpC,IAAIA,KAAK,CAACiB,IAAI,KAAK,2BAA2B,EAAE;QAC5ChB,QAAQ,CAAC,2CAA2C,CAAC;MACzD,CAAC,MAAM,IAAID,KAAK,CAACa,QAAQ,EAAE;QACvB;QACAZ,QAAQ,CAAC,kBAAkBD,KAAK,CAACa,QAAQ,CAACK,IAAI,CAACC,OAAO,EAAE,CAAC;MAC7D,CAAC,MAAM;QACHlB,QAAQ,CAAC,qCAAqC,CAAC;MACnD;IACJ,CAAC,SAAS;MACNF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IACvB;EACJ,CAAC;EAED,oBACIJ,OAAA;IAAKyB,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACnD5B,OAAA,CAACP,UAAU;MAACoC,OAAO,EAAC,IAAI;MAAAD,QAAA,EAAC;IAAqB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC3DjC,OAAA;MAAKyB,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,eAC9B5B,OAAA,CAACT,MAAM;QACHsC,OAAO,EAAC,WAAW;QACnBK,KAAK,EAAC,SAAS;QACfC,OAAO,EAAEzB,WAAY;QACrB0B,QAAQ,EAAEjC,OAAQ;QAClBsB,KAAK,EAAE;UAAEY,OAAO,EAAE;QAAY,CAAE;QAAAT,QAAA,EAE/BzB,OAAO,gBACJH,OAAA,CAACR,gBAAgB;UAAC8C,IAAI,EAAE,EAAG;UAACb,KAAK,EAAE;YAAES,KAAK,EAAE;UAAQ;QAAE;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,GAEzD;MACH;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,EACL5B,KAAK,iBACFL,OAAA,CAACP,UAAU;MAACyC,KAAK,EAAC,OAAO;MAACT,KAAK,EAAE;QAAEE,SAAS,EAAE;MAAO,CAAE;MAAAC,QAAA,EAClDvB;IAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC/B,EAAA,CAjFID,cAAc;EAAA,QAICJ,WAAW;AAAA;AAAA0C,EAAA,GAJ1BtC,cAAc;AAmFpB,eAAeA,cAAc;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}