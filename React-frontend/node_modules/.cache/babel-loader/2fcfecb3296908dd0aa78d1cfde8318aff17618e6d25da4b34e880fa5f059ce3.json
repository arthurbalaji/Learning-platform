{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Pages\\\\QuizSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Container, Typography, Box, Button, List, ListItem, ListItemIcon, ListItemText, Paper, CircularProgress } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QuizSummary = () => {\n  _s();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const quizType = queryParams.get('type');\n  const courseId = queryParams.get('courseId');\n  const quizSummaryId = queryParams.get('summaryId');\n  const lessonId = queryParams.get('lessonId');\n  const [summary, setSummary] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchSummary = async () => {\n      console.log('QuizSummary - Received quizSummaryId:', quizSummaryId); // Debug log\n\n      try {\n        setLoading(true);\n        setError(null);\n        const parsedCourseId = parseInt(courseId);\n        const parsedQuizSummaryId = parseInt(quizSummaryId);\n        console.log('Fetching quiz summary for course ID:', parsedCourseId, 'and quizSummaryId:', parsedQuizSummaryId); // Debug log\n\n        let response;\n        if (quizType === 'introductory') {\n          response = await axios.get(`http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/intro-quiz-summary/${parsedQuizSummaryId}`);\n        } else if (quizType === 'final') {\n          response = await axios.get(`http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/final-quiz-summary/${parsedQuizSummaryId}`);\n        } else {\n          response = await axios.get(`http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/lessons/${lessonId}/quiz-summary/${parsedQuizSummaryId}`);\n        }\n        console.log('Quiz summary response:', response.data); // Debug log\n\n        if (response.data) {\n          setSummary(response.data);\n        } else {\n          throw new Error('No quiz summary data received');\n        }\n      } catch (error) {\n        var _error$response, _error$response$data, _error$response2;\n        console.error('Error fetching quiz summary:', error);\n        const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || (typeof ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data) === 'string' ? error.response.data : null) || error.message || 'Failed to load quiz summary';\n        setError(errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSummary();\n  }, [courseId, quizSummaryId, user, quizType, lessonId]);\n  const getNextLessonId = () => {\n    var _summary$quiz, _summary$quiz$course;\n    if (!(summary !== null && summary !== void 0 && (_summary$quiz = summary.quiz) !== null && _summary$quiz !== void 0 && (_summary$quiz$course = _summary$quiz.course) !== null && _summary$quiz$course !== void 0 && _summary$quiz$course.lessons)) return null;\n    const course = summary.quiz.course;\n\n    // For lesson quiz, find next lesson\n    if (lessonId) {\n      const currentLessonIndex = course.lessons.findIndex(lesson => lesson.id === parseInt(lessonId));\n      if (currentLessonIndex !== -1 && currentLessonIndex < course.lessons.length - 1) {\n        return course.lessons[currentLessonIndex + 1].id;\n      }\n      // Only return null if we're at the last lesson\n      return null;\n    }\n\n    // For introductory quiz, return the first lesson's ID\n    if (quizType === 'introductory') {\n      var _course$lessons$;\n      return ((_course$lessons$ = course.lessons[0]) === null || _course$lessons$ === void 0 ? void 0 : _course$lessons$.id) || null;\n    }\n    return null;\n  };\n  const handleContinue = async () => {\n    try {\n      const score = calculateScore();\n      if (!(summary !== null && summary !== void 0 && summary.quiz)) {\n        throw new Error('Quiz data is not available');\n      }\n      if (quizType === 'lesson') {\n        if (score >= 80) {\n          // Check if all lessons are completed\n          const allLessonsCompleted = summary.quiz.course.lessons.every(lesson => {\n            var _summary$quiz$course$;\n            return (_summary$quiz$course$ = summary.quiz.course.completedLessons) === null || _summary$quiz$course$ === void 0 ? void 0 : _summary$quiz$course$.some(cl => cl.id === lesson.id);\n          });\n          if (allLessonsCompleted) {\n            navigate(`/courses/${courseId}/final-quiz`);\n          } else {\n            navigate(`/courses/${courseId}`);\n          }\n        } else {\n          // If failed, return to current lesson\n          navigate(`/learn/${courseId}/${lessonId}`);\n        }\n      } else {\n        // ... existing final and introductory quiz logic ...\n      }\n    } catch (error) {\n      console.error('Error handling navigation:', error);\n      setError(error.message || 'Failed to process quiz completion');\n      navigate(`/courses/${courseId}`);\n    }\n  };\n  const calculateScore = () => {\n    var _summary$questionSumm;\n    if (!(summary !== null && summary !== void 0 && (_summary$questionSumm = summary.questionSummaries) !== null && _summary$questionSumm !== void 0 && _summary$questionSumm.length)) return 0;\n    const correctAnswers = summary.questionSummaries.filter(qs => qs.correct).length;\n    return Math.round(correctAnswers / summary.questionSummaries.length * 100);\n  };\n  const getPassingScore = () => {\n    switch (quizType) {\n      case 'final':\n        return 80;\n      case 'lesson':\n        return 80;\n      default:\n        // introductory\n        return 60;\n    }\n  };\n\n  // Show loading state\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        minHeight: \"80vh\",\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Show error state\n  if (error || !summary) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          color: \"error\",\n          gutterBottom: true,\n          children: typeof error === 'string' ? error : 'Failed to load quiz summary'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: () => navigate(-1),\n          sx: {\n            mt: 2\n          },\n          children: \"Go Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this);\n  }\n  const score = calculateScore();\n  const passed = score >= getPassingScore();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      mb: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          align: \"center\",\n          gutterBottom: true,\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h1\",\n            color: passed ? 'success.main' : 'error.main',\n            sx: {\n              mb: 2\n            },\n            children: [score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: passed ? 'success.main' : 'error.main',\n            sx: {\n              mb: 3\n            },\n            children: passed ? 'Congratulations! You Passed!' : 'Please Try Again'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            mt: 4\n          },\n          children: summary.questionSummaries.map((qs, index) => {\n            var _qs$question$options$, _qs$question$options$2;\n            return /*#__PURE__*/_jsxDEV(ListItem, {\n              sx: {\n                mb: 2,\n                bgcolor: 'background.paper',\n                borderRadius: 1\n              },\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: qs.correct ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 41\n                }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: qs.question.name,\n                secondary: /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    color: \"textSecondary\",\n                    children: [\"Your answer: \", (_qs$question$options$ = qs.question.options[qs.selectedOptionIndex]) === null || _qs$question$options$ === void 0 ? void 0 : _qs$question$options$.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this), !qs.correct && /*#__PURE__*/_jsxDEV(Typography, {\n                    component: \"span\",\n                    color: \"error\",\n                    sx: {\n                      display: 'block'\n                    },\n                    children: [\"Correct answer: \", (_qs$question$options$2 = qs.question.options.find(opt => opt.correct)) === null || _qs$question$options$2 === void 0 ? void 0 : _qs$question$options$2.text]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          textAlign: \"center\",\n          display: \"flex\",\n          justifyContent: \"center\",\n          gap: 2,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"outlined\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: () => navigate(`/courses/${courseId}`),\n            children: \"Return to Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: handleContinue,\n            children: passed ? quizType === 'final' ? 'View Certificate' : 'Continue to Next Lesson' : 'Try Again'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizSummary, \"duuuJ2KM9vsggRAU5Mq0eyhIGNk=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = QuizSummary;\nexport default QuizSummary;\nvar _c;\n$RefreshReg$(_c, \"QuizSummary\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","useLocation","axios","UserContext","Container","Typography","Box","Button","List","ListItem","ListItemIcon","ListItemText","Paper","CircularProgress","CheckCircleIcon","CancelIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","QuizSummary","_s","location","queryParams","URLSearchParams","search","quizType","get","courseId","quizSummaryId","lessonId","summary","setSummary","loading","setLoading","error","setError","user","navigate","fetchSummary","console","log","parsedCourseId","parseInt","parsedQuizSummaryId","response","id","data","Error","_error$response","_error$response$data","_error$response2","errorMessage","message","getNextLessonId","_summary$quiz","_summary$quiz$course","quiz","course","lessons","currentLessonIndex","findIndex","lesson","length","_course$lessons$","handleContinue","score","calculateScore","allLessonsCompleted","every","_summary$quiz$course$","completedLessons","some","cl","_summary$questionSumm","questionSummaries","correctAnswers","filter","qs","correct","Math","round","getPassingScore","children","display","justifyContent","alignItems","minHeight","fileName","_jsxFileName","lineNumber","columnNumber","mt","textAlign","variant","color","gutterBottom","onClick","sx","passed","maxWidth","mb","elevation","p","align","map","index","_qs$question$options$","_qs$question$options$2","bgcolor","borderRadius","primary","question","name","secondary","component","options","selectedOptionIndex","text","find","opt","gap","size","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Pages/QuizSummary.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { \n    Container, \n    Typography, \n    Box, \n    Button, \n    List, \n    ListItem, \n    ListItemIcon, \n    ListItemText,\n    Paper,\n    CircularProgress\n} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst QuizSummary = () => {\n    \n    const location = useLocation();\n    const queryParams = new URLSearchParams(location.search);\n    const quizType = queryParams.get('type');\n    const courseId = queryParams.get('courseId');\n    const quizSummaryId = queryParams.get('summaryId');\n    const lessonId = queryParams.get('lessonId');\n    const [summary, setSummary] = useState(null);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const { user } = useContext(UserContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchSummary = async () => {\n            console.log('QuizSummary - Received quizSummaryId:', quizSummaryId); // Debug log\n            \n            \n            \n            try {\n                setLoading(true);\n                setError(null);\n                \n                const parsedCourseId = parseInt(courseId);\n                const parsedQuizSummaryId = parseInt(quizSummaryId);\n                console.log('Fetching quiz summary for course ID:', parsedCourseId, 'and quizSummaryId:', parsedQuizSummaryId); // Debug log\n                \n                let response;\n                if (quizType === 'introductory') {\n                    response = await axios.get(\n                        `http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/intro-quiz-summary/${parsedQuizSummaryId}`\n                    );\n                } else if (quizType === 'final') {\n                    response = await axios.get(\n                        `http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/final-quiz-summary/${parsedQuizSummaryId}`\n                    );\n                } else {\n                    response = await axios.get(\n                        `http://localhost:8080/users/${user.id}/courses/${parsedCourseId}/lessons/${lessonId}/quiz-summary/${parsedQuizSummaryId}`\n                    );\n                }\n                \n                console.log('Quiz summary response:', response.data); // Debug log\n                \n                if (response.data) {\n                    setSummary(response.data);\n                } else {\n                    throw new Error('No quiz summary data received');\n                }\n            } catch (error) {\n                console.error('Error fetching quiz summary:', error);\n                const errorMessage = error.response?.data?.message || \n                                   (typeof error.response?.data === 'string' ? error.response.data : null) || \n                                   error.message || \n                                   'Failed to load quiz summary';\n                setError(errorMessage);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchSummary();\n    }, [courseId, quizSummaryId, user, quizType, lessonId]);\n\n    const getNextLessonId = () => {\n        if (!summary?.quiz?.course?.lessons) return null;\n        const course = summary.quiz.course;\n        \n        // For lesson quiz, find next lesson\n        if (lessonId) {\n            const currentLessonIndex = course.lessons.findIndex(\n                lesson => lesson.id === parseInt(lessonId)\n            );\n            if (currentLessonIndex !== -1 && currentLessonIndex < course.lessons.length - 1) {\n                return course.lessons[currentLessonIndex + 1].id;\n            }\n            // Only return null if we're at the last lesson\n            return null;\n        }\n        \n        // For introductory quiz, return the first lesson's ID\n        if (quizType === 'introductory') {\n            return course.lessons[0]?.id || null;\n        }\n        \n        return null;\n    };\n\n    const handleContinue = async () => {\n        try {\n            const score = calculateScore();\n            \n            if (!summary?.quiz) {\n                throw new Error('Quiz data is not available');\n            }\n            \n            if (quizType === 'lesson') {\n                if (score >= 80) {\n                    // Check if all lessons are completed\n                    const allLessonsCompleted = summary.quiz.course.lessons.every(lesson =>\n                        summary.quiz.course.completedLessons?.some(cl => cl.id === lesson.id)\n                    );\n                    \n                    if (allLessonsCompleted) {\n                        navigate(`/courses/${courseId}/final-quiz`);\n                    } else {\n                        navigate(`/courses/${courseId}`);\n                    }\n                } else {\n                    // If failed, return to current lesson\n                    navigate(`/learn/${courseId}/${lessonId}`);\n                }\n            } else {\n                // ... existing final and introductory quiz logic ...\n            }\n        } catch (error) {\n            console.error('Error handling navigation:', error);\n            setError(error.message || 'Failed to process quiz completion');\n            navigate(`/courses/${courseId}`);\n        }\n    };\n\n    const calculateScore = () => {\n        if (!summary?.questionSummaries?.length) return 0;\n        const correctAnswers = summary.questionSummaries.filter(qs => qs.correct).length;\n        return Math.round((correctAnswers / summary.questionSummaries.length) * 100);\n    };\n\n    const getPassingScore = () => {\n        switch(quizType) {\n            case 'final':\n                return 80;\n            case 'lesson':\n                return 80;\n            default: // introductory\n                return 60;\n        }\n    };\n\n    // Show loading state\n    if (loading) {\n        return (\n            <Container>\n                <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"80vh\">\n                    <CircularProgress />\n                </Box>\n            </Container>\n        );\n    }\n\n    // Show error state\n    if (error || !summary) {\n        return (\n            <Container>\n                <Box mt={4} textAlign=\"center\">\n                    <Typography variant=\"h6\" color=\"error\" gutterBottom>\n                        {typeof error === 'string' ? error : 'Failed to load quiz summary'}\n                    </Typography>\n                    <Button \n                        variant=\"contained\" \n                        color=\"primary\" \n                        onClick={() => navigate(-1)}\n                        sx={{ mt: 2 }}\n                    >\n                        Go Back\n                    </Button>\n                </Box>\n            </Container>\n        );\n    }\n\n    const score = calculateScore();\n    const passed = score >= getPassingScore();\n\n    return (\n        <Container maxWidth=\"md\">\n            <Box mt={4} mb={4}>\n                <Paper elevation={3} sx={{ p: 4 }}>\n                    <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                        Quiz Results\n                    </Typography>\n\n                    <Box mt={4} textAlign=\"center\">\n                        <Typography variant=\"h1\" \n                            color={passed ? 'success.main' : 'error.main'}\n                            sx={{ mb: 2 }}\n                        >\n                            {score}%\n                        </Typography>\n                        <Typography variant=\"h5\" \n                            color={passed ? 'success.main' : 'error.main'}\n                            sx={{ mb: 3 }}\n                        >\n                            {passed ? 'Congratulations! You Passed!' : 'Please Try Again'}\n                        </Typography>\n                    </Box>\n\n                    <List sx={{ mt: 4 }}>\n                        {summary.questionSummaries.map((qs, index) => (\n                            <ListItem key={index} sx={{ mb: 2, bgcolor: 'background.paper', borderRadius: 1 }}>\n                                <ListItemIcon>\n                                    {qs.correct ? \n                                        <CheckCircleIcon color=\"success\" /> : \n                                        <CancelIcon color=\"error\" />\n                                    }\n                                </ListItemIcon>\n                                <ListItemText\n                                    primary={qs.question.name}\n                                    secondary={\n                                        <>\n                                            <Typography component=\"span\" color=\"textSecondary\">\n                                                Your answer: {qs.question.options[qs.selectedOptionIndex]?.text}\n                                            </Typography>\n                                            {!qs.correct && (\n                                                <Typography component=\"span\" color=\"error\" sx={{ display: 'block' }}>\n                                                    Correct answer: {qs.question.options.find(opt => opt.correct)?.text}\n                                                </Typography>\n                                            )}\n                                        </>\n                                    }\n                                />\n                            </ListItem>\n                        ))}\n                    </List>\n\n                    <Box mt={4} textAlign=\"center\" display=\"flex\" justifyContent=\"center\" gap={2}>\n                        <Button\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={() => navigate(`/courses/${courseId}`)}\n                        >\n                            Return to Course\n                        </Button>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            size=\"large\"\n                            onClick={handleContinue}\n                        >\n                            {passed ? \n                                (quizType === 'final' ? 'View Certificate' : 'Continue to Next Lesson') : \n                                'Try Again'}\n                        </Button>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default QuizSummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}