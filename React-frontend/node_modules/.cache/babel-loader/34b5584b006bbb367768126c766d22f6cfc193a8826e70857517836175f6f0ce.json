{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Pages\\\\Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Button, Typography, Box, Container, List, ListItem, ListItemText, ListItemIcon, CircularProgress } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport YouTube from 'react-youtube';\nimport PopupGame from './popupgame';\nimport Webcam from 'react-webcam';\n\n// YouTube video options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst youtubeOpts = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    autoplay: 0,\n    controls: 1,\n    rel: 0,\n    // Don't show related videos\n    modestbranding: 1,\n    // Hide YouTube logo\n    origin: window.location.origin // Add origin for security\n  }\n};\n\n// Extract YouTube video ID from URL\nconst getYouTubeVideoId = url => {\n  if (!url) return null;\n\n  // Handle different YouTube URL formats\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n};\n\n// Add this function after getYouTubeVideoId\nconst isFinalQuizEnabled = (course, completedLessons) => {\n  return course.lessons.every(lesson => completedLessons.some(completed => completed.id === lesson.id));\n};\nconst Learn = () => {\n  _s();\n  const {\n    courseId,\n    lessonId\n  } = useParams();\n  const [course, setCourse] = useState(null);\n  const [lesson, setLesson] = useState(null);\n  const [completedLessons, setCompletedLessons] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [videoError, setVideoError] = useState(false);\n  const [showGame, setShowGame] = useState(false);\n  const [emotionTimer, setEmotionTimer] = useState(null);\n  const webcamRef = React.useRef(null);\n  useEffect(() => {\n    const fetchCourse = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Check if user has completed intro quiz\n        const introQuizResponse = await axios.get(`http://localhost:8080/users/${user.id}/courses/${courseId}/intro-quiz-summaries`);\n        if (!introQuizResponse.data || introQuizResponse.data.length === 0) {\n          navigate(`/courses/${courseId}/introductory-quiz`);\n          return;\n        }\n        try {\n          // Split the Promise.all to handle completed lessons separately\n          const [courseResponse, lessonResponse] = await Promise.all([axios.get(`http://localhost:8080/courses/${courseId}`), axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}`)]);\n          setCourse(courseResponse.data);\n          setLesson(lessonResponse.data);\n\n          // Handle completed lessons separately with error fallback\n          try {\n            const completedLessonsResponse = await axios.get(`http://localhost:8080/courses/${courseId}/users/${user.id}/completed-lessons`);\n            setCompletedLessons(completedLessonsResponse.data || []);\n          } catch (completedError) {\n            console.warn('Error fetching completed lessons:', completedError);\n            setCompletedLessons([]); // Set empty array as fallback\n          }\n        } catch (dataError) {\n          console.error('Error fetching course/lesson data:', dataError);\n          setError('Failed to load course content. Please try again.');\n        }\n      } catch (introQuizError) {\n        console.error('Error checking intro quiz:', introQuizError);\n        navigate(`/courses/${courseId}/introductory-quiz`);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && courseId && lessonId) {\n      fetchCourse();\n    }\n  }, [courseId, lessonId, user, navigate]);\n\n  // Update the checkEmotion function\n  const checkEmotion = async () => {\n    if (webcamRef.current) {\n      try {\n        // Ensure webcam is initialized\n        await new Promise(resolve => setTimeout(resolve, 1000));\n        const imageSrc = webcamRef.current.getScreenshot();\n        if (!imageSrc) {\n          console.error('Failed to capture webcam image');\n          return;\n        }\n\n        // Clean up the base64 string\n        const base64Data = imageSrc.split(',')[1];\n        const response = await axios.post('http://localhost:5000/analyze-emotion', {\n          image: base64Data\n        }, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        console.log('Emotion analysis response:', response.data);\n        if (response.data.needs_break) {\n          setShowGame(true);\n          if (emotionTimer) {\n            clearInterval(emotionTimer);\n            setEmotionTimer(null);\n          }\n        }\n      } catch (error) {\n        var _error$response;\n        console.error('Error analyzing emotion:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (!showGame && !emotionTimer) {\n      const timer = setInterval(checkEmotion, 5 * 1000); // 5 minutes\n      setEmotionTimer(timer);\n    }\n    return () => {\n      if (emotionTimer) {\n        clearInterval(emotionTimer);\n      }\n    };\n  }, [showGame, emotionTimer]);\n  const handleQuiz = async () => {\n    try {\n      // Check if quiz already completed\n      const quizStatusResponse = await axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}/users/${user.id}/quiz-status`);\n      if (quizStatusResponse.data && quizStatusResponse.data.completed) {\n        // Mark course as in progress if this is the first completed lesson\n        if (completedLessons.length === 0) {\n          try {\n            await axios.post(`http://localhost:8080/users/${user.id}/courses/${courseId}/in-progress`);\n          } catch (error) {\n            console.error('Error marking course as in progress:', error);\n          }\n        }\n\n        // Navigate to next lesson or quiz\n        const currentLessonIndex = course.lessons.findIndex(l => l.id === parseInt(lessonId));\n        const nextLesson = course.lessons[currentLessonIndex + 1];\n        if (nextLesson) {\n          navigate(`/learn/${courseId}/${nextLesson.id}`);\n        } else {\n          // No more lessons, check if final quiz is available\n          const finalQuizResponse = await axios.get(`http://localhost:8080/courses/${courseId}/final-quiz`);\n          if (finalQuizResponse.data) {\n            navigate(`/courses/${courseId}/final-quiz`);\n          } else {\n            navigate(`/courses/${courseId}`);\n          }\n        }\n      } else {\n        // Quiz not completed, navigate to lesson quiz\n        navigate(`/courses/${courseId}/lessons/${lessonId}/quiz`);\n      }\n    } catch (error) {\n      console.error('Error checking quiz status:', error);\n      navigate(`/courses/${courseId}/lessons/${lessonId}/quiz`);\n    }\n  };\n  const handleLessonClick = clickedLessonId => {\n    if (!(course !== null && course !== void 0 && course.lessons)) return;\n    const lessonIndex = course.lessons.findIndex(l => l.id === clickedLessonId);\n\n    // If completedLessons is empty (due to API error), allow clicking any lesson\n    if (completedLessons.length === 0) {\n      navigate(`/learn/${courseId}/${clickedLessonId}`);\n      return;\n    }\n    const previousLessonsCompleted = course.lessons.slice(0, lessonIndex).every(l => completedLessons.some(cl => cl.id === l.id));\n    if (completedLessons.some(cl => cl.id === clickedLessonId) || previousLessonsCompleted) {\n      navigate(`/learn/${courseId}/${clickedLessonId}`);\n    } else {\n      alert('Please complete previous lessons first');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      mt: 4,\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flex: 1,\n        children: [lesson.youtubeVideoLink && !videoError && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: getYouTubeVideoId(lesson.youtubeVideoLink),\n            opts: youtubeOpts,\n            onError: error => {\n              setVideoError(true);\n              console.error('YouTube Error:', error);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), videoError && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: \"Failed to load video. Please check your internet connection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleQuiz,\n            children: \"Attend Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          mt: 2,\n          children: lesson.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          mt: 2,\n          children: lesson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 4,\n        width: \"300px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Lessons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: [course.lessons.map(l => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => handleLessonClick(l.id),\n            sx: {\n              // Using sx prop instead of style\n              backgroundColor: completedLessons.some(cl => cl.id === l.id) ? '#d3ffd3' : '#ffd3d3',\n              cursor: 'pointer',\n              // Add pointer cursor\n              '&:hover': {\n                opacity: 0.9\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: completedLessons.some(cl => cl.id === l.id) ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: l.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this)]\n          }, l.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 29\n          }, this)), /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => {\n              if (isFinalQuizEnabled(course, completedLessons)) {\n                navigate(`/courses/${courseId}/final-quiz`);\n              } else {\n                alert('Please complete all lessons before attempting the final quiz');\n              }\n            },\n            sx: {\n              backgroundColor: '#f0f0f0',\n              cursor: 'pointer',\n              '&:hover': {\n                opacity: 0.9\n              },\n              marginTop: 1,\n              borderTop: '2px solid #ddd'\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: \"Final Quiz\",\n              secondary: isFinalQuizEnabled(course, completedLessons) ? \"Ready to take\" : \"Complete all lessons first\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Webcam, {\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      style: {\n        display: 'none'\n      },\n      videoConstraints: {\n        width: 640,\n        height: 480,\n        facingMode: \"user\"\n      },\n      mirrored: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PopupGame, {\n      open: showGame,\n      onClose: () => {\n        setShowGame(false);\n        // Resume emotion detection timer\n        if (!emotionTimer) {\n          const timer = setInterval(checkEmotion, 5 * 60 * 1000);\n          setEmotionTimer(timer);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 9\n  }, this);\n};\n_s(Learn, \"BJ4PZCl1H16s31hUDOCCsPRgXkc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Learn;\nexport default Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","axios","UserContext","Button","Typography","Box","Container","List","ListItem","ListItemText","ListItemIcon","CircularProgress","CheckCircleIcon","RadioButtonUncheckedIcon","YouTube","PopupGame","Webcam","jsxDEV","_jsxDEV","youtubeOpts","height","width","playerVars","autoplay","controls","rel","modestbranding","origin","window","location","getYouTubeVideoId","url","regExp","match","length","isFinalQuizEnabled","course","completedLessons","lessons","every","lesson","some","completed","id","Learn","_s","courseId","lessonId","setCourse","setLesson","setCompletedLessons","loading","setLoading","error","setError","user","navigate","videoError","setVideoError","showGame","setShowGame","emotionTimer","setEmotionTimer","webcamRef","useRef","fetchCourse","introQuizResponse","get","data","courseResponse","lessonResponse","Promise","all","completedLessonsResponse","completedError","console","warn","dataError","introQuizError","checkEmotion","current","resolve","setTimeout","imageSrc","getScreenshot","base64Data","split","response","post","image","headers","log","needs_break","clearInterval","_error$response","message","timer","setInterval","handleQuiz","quizStatusResponse","currentLessonIndex","findIndex","l","parseInt","nextLesson","finalQuizResponse","handleLessonClick","clickedLessonId","lessonIndex","previousLessonsCompleted","slice","cl","alert","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","component","mt","name","flex","youtubeVideoLink","mb","videoId","opts","onError","onClick","description","ml","map","sx","backgroundColor","cursor","opacity","primary","marginTop","borderTop","secondary","ref","screenshotFormat","style","videoConstraints","facingMode","mirrored","open","onClose","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Pages/Learn.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Button, Typography, Box, Container, List, ListItem, ListItemText, ListItemIcon, CircularProgress } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport YouTube from 'react-youtube';\nimport PopupGame from './popupgame';\nimport Webcam from 'react-webcam';\n\n// YouTube video options\nconst youtubeOpts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n        autoplay: 0,\n        controls: 1,\n        rel: 0, // Don't show related videos\n        modestbranding: 1, // Hide YouTube logo\n        origin: window.location.origin // Add origin for security\n    }\n};\n\n// Extract YouTube video ID from URL\nconst getYouTubeVideoId = (url) => {\n    if (!url) return null;\n    \n    // Handle different YouTube URL formats\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n\n    return (match && match[2].length === 11) ? match[2] : null;\n};\n\n// Add this function after getYouTubeVideoId\nconst isFinalQuizEnabled = (course, completedLessons) => {\n    return course.lessons.every(lesson => \n        completedLessons.some(completed => completed.id === lesson.id)\n    );\n};\n\nconst Learn = () => {\n    const { courseId, lessonId } = useParams();\n    const [course, setCourse] = useState(null);\n    const [lesson, setLesson] = useState(null);\n    const [completedLessons, setCompletedLessons] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const { user } = useContext(UserContext);\n    const navigate = useNavigate();\n    const [videoError, setVideoError] = useState(false);\n    const [showGame, setShowGame] = useState(false);\n    const [emotionTimer, setEmotionTimer] = useState(null);\n    const webcamRef = React.useRef(null);\n\n    useEffect(() => {\n        const fetchCourse = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                // Check if user has completed intro quiz\n                const introQuizResponse = await axios.get(\n                    `http://localhost:8080/users/${user.id}/courses/${courseId}/intro-quiz-summaries`\n                );\n\n                if (!introQuizResponse.data || introQuizResponse.data.length === 0) {\n                    navigate(`/courses/${courseId}/introductory-quiz`);\n                    return;\n                }\n\n                try {\n                    // Split the Promise.all to handle completed lessons separately\n                    const [courseResponse, lessonResponse] = await Promise.all([\n                        axios.get(`http://localhost:8080/courses/${courseId}`),\n                        axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}`)\n                    ]);\n\n                    setCourse(courseResponse.data);\n                    setLesson(lessonResponse.data);\n\n                    // Handle completed lessons separately with error fallback\n                    try {\n                        const completedLessonsResponse = await axios.get(\n                            `http://localhost:8080/courses/${courseId}/users/${user.id}/completed-lessons`\n                        );\n                        setCompletedLessons(completedLessonsResponse.data || []);\n                    } catch (completedError) {\n                        console.warn('Error fetching completed lessons:', completedError);\n                        setCompletedLessons([]); // Set empty array as fallback\n                    }\n\n                } catch (dataError) {\n                    console.error('Error fetching course/lesson data:', dataError);\n                    setError('Failed to load course content. Please try again.');\n                }\n\n            } catch (introQuizError) {\n                console.error('Error checking intro quiz:', introQuizError);\n                navigate(`/courses/${courseId}/introductory-quiz`);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (user && courseId && lessonId) {\n            fetchCourse();\n        }\n    }, [courseId, lessonId, user, navigate]);\n\n    // Update the checkEmotion function\n    const checkEmotion = async () => {\n        if (webcamRef.current) {\n            try {\n                // Ensure webcam is initialized\n                await new Promise(resolve => setTimeout(resolve, 1000));\n                \n                const imageSrc = webcamRef.current.getScreenshot();\n                if (!imageSrc) {\n                    console.error('Failed to capture webcam image');\n                    return;\n                }\n\n                // Clean up the base64 string\n                const base64Data = imageSrc.split(',')[1];\n\n                const response = await axios.post('http://localhost:5000/analyze-emotion', {\n                    image: base64Data\n                }, {\n                    headers: {\n                        'Content-Type': 'application/json'\n                    }\n                });\n                \n                console.log('Emotion analysis response:', response.data);\n                \n                if (response.data.needs_break) {\n                    setShowGame(true);\n                    if (emotionTimer) {\n                        clearInterval(emotionTimer);\n                        setEmotionTimer(null);\n                    }\n                }\n            } catch (error) {\n                console.error('Error analyzing emotion:', error.response?.data || error.message);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!showGame && !emotionTimer) {\n            const timer = setInterval(checkEmotion, 5 * 1000); // 5 minutes\n            setEmotionTimer(timer);\n        }\n        return () => {\n            if (emotionTimer) {\n                clearInterval(emotionTimer);\n            }\n        };\n    }, [showGame, emotionTimer]);\n\n    const handleQuiz = async () => {\n        try {\n            // Check if quiz already completed\n            const quizStatusResponse = await axios.get(\n                `http://localhost:8080/courses/${courseId}/lessons/${lessonId}/users/${user.id}/quiz-status`\n            );\n\n            if (quizStatusResponse.data && quizStatusResponse.data.completed) {\n                // Mark course as in progress if this is the first completed lesson\n                if (completedLessons.length === 0) {\n                    try {\n                        await axios.post(`http://localhost:8080/users/${user.id}/courses/${courseId}/in-progress`);\n                    } catch (error) {\n                        console.error('Error marking course as in progress:', error);\n                    }\n                }\n\n                // Navigate to next lesson or quiz\n                const currentLessonIndex = course.lessons.findIndex(l => l.id === parseInt(lessonId));\n                const nextLesson = course.lessons[currentLessonIndex + 1];\n                \n                if (nextLesson) {\n                    navigate(`/learn/${courseId}/${nextLesson.id}`);\n                } else {\n                    // No more lessons, check if final quiz is available\n                    const finalQuizResponse = await axios.get(\n                        `http://localhost:8080/courses/${courseId}/final-quiz`\n                    );\n                    if (finalQuizResponse.data) {\n                        navigate(`/courses/${courseId}/final-quiz`);\n                    } else {\n                        navigate(`/courses/${courseId}`);\n                    }\n                }\n            } else {\n                // Quiz not completed, navigate to lesson quiz\n                navigate(`/courses/${courseId}/lessons/${lessonId}/quiz`);\n            }\n        } catch (error) {\n            console.error('Error checking quiz status:', error);\n            navigate(`/courses/${courseId}/lessons/${lessonId}/quiz`);\n        }\n    };\n\n    const handleLessonClick = (clickedLessonId) => {\n        if (!course?.lessons) return;\n\n        const lessonIndex = course.lessons.findIndex(l => l.id === clickedLessonId);\n        \n        // If completedLessons is empty (due to API error), allow clicking any lesson\n        if (completedLessons.length === 0) {\n            navigate(`/learn/${courseId}/${clickedLessonId}`);\n            return;\n        }\n\n        const previousLessonsCompleted = course.lessons\n            .slice(0, lessonIndex)\n            .every(l => completedLessons.some(cl => cl.id === l.id));\n\n        if (completedLessons.some(cl => cl.id === clickedLessonId) || previousLessonsCompleted) {\n            navigate(`/learn/${courseId}/${clickedLessonId}`);\n        } else {\n            alert('Please complete previous lessons first');\n        }\n    };\n\n    if (loading) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n                <Typography color=\"error\">{error}</Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <Container>\n            <Typography variant=\"h4\" component=\"h1\" mt={4}>\n                {course.name}\n            </Typography>\n            <Box display=\"flex\" mt={4}>\n                <Box flex={1}>\n                    {lesson.youtubeVideoLink && !videoError && (\n                        <Box mb={3}>\n                            <YouTube \n                                videoId={getYouTubeVideoId(lesson.youtubeVideoLink)} \n                                opts={youtubeOpts}\n                                onError={(error) => {\n                                    setVideoError(true);\n                                    console.error('YouTube Error:', error);\n                                }}\n                            />\n                        </Box>\n                    )}\n                    {videoError && (\n                        <Box mb={3}>\n                            <Typography color=\"error\">\n                                Failed to load video. Please check your internet connection.\n                            </Typography>\n                        </Box>\n                    )}\n                    <Box mt={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleQuiz}>\n                            Attend Quiz\n                        </Button>\n                    </Box>\n                    <Typography variant=\"h6\" component=\"h2\" mt={2}>\n                        {lesson.name}\n                    </Typography>\n                    <Typography variant=\"body1\" component=\"p\" mt={2}>\n                        {lesson.description}\n                    </Typography>\n                </Box>\n                <Box ml={4} width=\"300px\">\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Lessons\n                    </Typography>\n                    <List>\n                        {course.lessons.map((l) => (\n                            <ListItem\n                                key={l.id}\n                                onClick={() => handleLessonClick(l.id)}\n                                sx={{  // Using sx prop instead of style\n                                    backgroundColor: completedLessons.some(cl => cl.id === l.id) \n                                        ? '#d3ffd3' \n                                        : '#ffd3d3',\n                                    cursor: 'pointer', // Add pointer cursor\n                                    '&:hover': {\n                                        opacity: 0.9\n                                    }\n                                }}\n                            >\n                                <ListItemIcon>\n                                    {completedLessons.some(cl => cl.id === l.id) ? (\n                                        <CheckCircleIcon color=\"primary\" />\n                                    ) : (\n                                        <RadioButtonUncheckedIcon color=\"secondary\" />\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText primary={l.name} />\n                            </ListItem>\n                        ))}\n                        {/* Final Quiz List Item */}\n                        <ListItem\n                            onClick={() => {\n                                if (isFinalQuizEnabled(course, completedLessons)) {\n                                    navigate(`/courses/${courseId}/final-quiz`);\n                                } else {\n                                    alert('Please complete all lessons before attempting the final quiz');\n                                }\n                            }}\n                            sx={{\n                                backgroundColor: '#f0f0f0',\n                                cursor: 'pointer',\n                                '&:hover': {\n                                    opacity: 0.9\n                                },\n                                marginTop: 1,\n                                borderTop: '2px solid #ddd'\n                            }}\n                        >\n                            <ListItemIcon>\n                                <RadioButtonUncheckedIcon color=\"primary\" />\n                            </ListItemIcon>\n                            <ListItemText \n                                primary=\"Final Quiz\"\n                                secondary={isFinalQuizEnabled(course, completedLessons) ? \n                                    \"Ready to take\" : \n                                    \"Complete all lessons first\"} \n                            />\n                        </ListItem>\n                    </List>\n                </Box>\n            </Box>\n            <Webcam\n                ref={webcamRef}\n                screenshotFormat=\"image/jpeg\"\n                style={{ display: 'none' }}\n                videoConstraints={{\n                    width: 640,\n                    height: 480,\n                    facingMode: \"user\"\n                }}\n                mirrored={false}\n            />\n            <PopupGame \n                open={showGame}\n                onClose={() => {\n                    setShowGame(false);\n                    // Resume emotion detection timer\n                    if (!emotionTimer) {\n                        const timer = setInterval(checkEmotion, 5 * 60 * 1000);\n                        setEmotionTimer(timer);\n                    }\n                }}\n            />\n        </Container>\n    );\n};\n\nexport default Learn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}