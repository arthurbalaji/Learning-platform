{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Pages\\\\QuizSummary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Container, Typography, Box, Button, List, ListItem, ListItemIcon, ListItemText, Paper } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizSummary = () => {\n  _s();\n  const {\n    quizSummaryId\n  } = useParams();\n  const [quizSummary, setQuizSummary] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuizSummary = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/users/${user.id}/quiz-summary/${quizSummaryId}`);\n        setQuizSummary(response.data);\n      } catch (error) {\n        console.error('Error fetching quiz summary:', error);\n      }\n    };\n    fetchQuizSummary();\n  }, [quizSummaryId, user]);\n  const handleNextLesson = async () => {\n    try {\n      if (quizSummary.quiz.type === 'FINAL' && quizSummary.score >= 80) {\n        await axios.post(`http://localhost:8080/users/${user.id}/complete/${quizSummary.course.id}`);\n        navigate(`/certificates`);\n      } else if (quizSummary.quiz.type === 'INTRODUCTORY' && quizSummary.score >= 60) {\n        navigate(`/learn/${quizSummary.course.id}/${quizSummary.nextLessonId}`);\n      } else {\n        // If failed, redirect to course page to retry\n        navigate(`/courses/${quizSummary.course.id}`);\n      }\n    } catch (error) {\n      console.error('Error handling next step:', error);\n    }\n  };\n  if (!quizSummary) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  const getPassingScore = () => {\n    return quizSummary.quiz.type === 'FINAL' ? 80 : 60;\n  };\n  const isPassed = quizSummary.score >= getPassingScore();\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: \"Quiz Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            color: isPassed ? 'success.main' : 'error.main',\n            children: [quizSummary.score, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"text.secondary\",\n            gutterBottom: true,\n            children: [\"Passing Score: \", getPassingScore(), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: isPassed ? 'success.main' : 'error.main',\n            mt: 2,\n            children: isPassed ? 'Congratulations! You passed!' : 'You did not pass. Please try again.'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            gutterBottom: true,\n            children: \"Question Summary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            children: quizSummary.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n              children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                children: answer.correct ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                  color: \"success\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 45\n                }, this) : /*#__PURE__*/_jsxDEV(CancelIcon, {\n                  color: \"error\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: answer.question,\n                secondary: `Your answer: ${answer.selectedAnswer}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            size: \"large\",\n            onClick: handleNextLesson,\n            children: quizSummary.quiz.type === 'FINAL' ? isPassed ? 'View Certificate' : 'Retry Quiz' : isPassed ? 'Continue to Course' : 'Return to Course'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizSummary, \"sLO1IRQIHB+uGN2FMvWMXHRfzcE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = QuizSummary;\nexport default QuizSummary;\nvar _c;\n$RefreshReg$(_c, \"QuizSummary\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","axios","UserContext","Container","Typography","Box","Button","List","ListItem","ListItemIcon","ListItemText","Paper","CheckCircleIcon","CancelIcon","jsxDEV","_jsxDEV","QuizSummary","_s","quizSummaryId","quizSummary","setQuizSummary","user","navigate","fetchQuizSummary","response","get","id","data","error","console","handleNextLesson","quiz","type","score","post","course","nextLessonId","children","fileName","_jsxFileName","lineNumber","columnNumber","getPassingScore","isPassed","maxWidth","mt","elevation","sx","p","variant","component","gutterBottom","textAlign","color","answers","map","answer","index","correct","primary","question","secondary","selectedAnswer","size","onClick","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Pages/QuizSummary.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { \n    Container, \n    Typography, \n    Box, \n    Button, \n    List, \n    ListItem, \n    ListItemIcon, \n    ListItemText,\n    Paper\n} from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nconst QuizSummary = () => {\n    const { quizSummaryId } = useParams();\n    const [quizSummary, setQuizSummary] = useState(null);\n    const { user } = useContext(UserContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchQuizSummary = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/users/${user.id}/quiz-summary/${quizSummaryId}`);\n                setQuizSummary(response.data);\n            } catch (error) {\n                console.error('Error fetching quiz summary:', error);\n            }\n        };\n\n        fetchQuizSummary();\n    }, [quizSummaryId, user]);\n\n    const handleNextLesson = async () => {\n        try {\n            if (quizSummary.quiz.type === 'FINAL' && quizSummary.score >= 80) {\n                await axios.post(`http://localhost:8080/users/${user.id}/complete/${quizSummary.course.id}`);\n                navigate(`/certificates`);\n            } else if (quizSummary.quiz.type === 'INTRODUCTORY' && quizSummary.score >= 60) {\n                navigate(`/learn/${quizSummary.course.id}/${quizSummary.nextLessonId}`);\n            } else {\n                // If failed, redirect to course page to retry\n                navigate(`/courses/${quizSummary.course.id}`);\n            }\n        } catch (error) {\n            console.error('Error handling next step:', error);\n        }\n    };\n\n    if (!quizSummary) {\n        return <div>Loading...</div>;\n    }\n\n    const getPassingScore = () => {\n        return quizSummary.quiz.type === 'FINAL' ? 80 : 60;\n    };\n\n    const isPassed = quizSummary.score >= getPassingScore();\n\n    return (\n        <Container maxWidth=\"md\">\n            <Box mt={4}>\n                <Paper elevation={3} sx={{ p: 4 }}>\n                    <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n                        Quiz Results\n                    </Typography>\n                    \n                    <Box mt={3} textAlign=\"center\">\n                        <Typography variant=\"h2\" color={isPassed ? 'success.main' : 'error.main'}>\n                            {quizSummary.score}%\n                        </Typography>\n                        <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                            Passing Score: {getPassingScore()}%\n                        </Typography>\n                        <Typography variant=\"h5\" color={isPassed ? 'success.main' : 'error.main'} mt={2}>\n                            {isPassed ? 'Congratulations! You passed!' : 'You did not pass. Please try again.'}\n                        </Typography>\n                    </Box>\n\n                    <Box mt={4}>\n                        <Typography variant=\"h6\" gutterBottom>\n                            Question Summary\n                        </Typography>\n                        <List>\n                            {quizSummary.answers.map((answer, index) => (\n                                <ListItem key={index}>\n                                    <ListItemIcon>\n                                        {answer.correct ? \n                                            <CheckCircleIcon color=\"success\" /> : \n                                            <CancelIcon color=\"error\" />\n                                        }\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={answer.question}\n                                        secondary={`Your answer: ${answer.selectedAnswer}`}\n                                    />\n                                </ListItem>\n                            ))}\n                        </List>\n                    </Box>\n\n                    <Box mt={4} textAlign=\"center\">\n                        <Button \n                            variant=\"contained\" \n                            color=\"primary\" \n                            size=\"large\"\n                            onClick={handleNextLesson}\n                        >\n                            {quizSummary.quiz.type === 'FINAL' ? \n                                (isPassed ? 'View Certificate' : 'Retry Quiz') :\n                                (isPassed ? 'Continue to Course' : 'Return to Course')}\n                        </Button>\n                    </Box>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default QuizSummary;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}