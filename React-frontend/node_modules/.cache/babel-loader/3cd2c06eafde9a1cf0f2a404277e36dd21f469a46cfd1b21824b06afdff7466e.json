{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chatbot(Meta Llama 3.1 8B)\\\\React-frontend\\\\src\\\\components\\\\chathistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport { AppBar, Toolbar, Avatar, Button, List, ListItem, ListItemText, Typography, Container, Box, IconButton, Paper } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatHistory = () => {\n  _s();\n  var _location$state, _auth$currentUser;\n  const [chats, setChats] = useState([]);\n  const [user, setUser] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email);\n  useEffect(() => {\n    if (email) {\n      // Fetch user-specific chats when the component mounts\n      axios.get(`http://localhost:8080/chats/user/${email}`).then(response => {\n        setChats(response.data);\n      }).catch(error => {\n        console.error('Error fetching chats:', error);\n      });\n\n      // Fetch user information\n      axios.get(`http://localhost:8080/users/${email}`).then(response => {\n        setUser(response.data);\n      }).catch(error => {\n        console.error('Error fetching user information:', error);\n      });\n    }\n  }, [email]);\n  const handleChatClick = chatId => {\n    // Navigate to the chat page with the selected chat ID and user email\n    navigate('/chat', {\n      state: {\n        email,\n        chatId\n      }\n    });\n  };\n  const handleCreateChat = () => {\n    // Create a new chat with null data\n    const newChat = {\n      name: null,\n      messages: []\n    };\n    axios.post(`http://localhost:8080/chats/${email}`, newChat).then(response => {\n      const newChatId = response.data.id;\n      navigate('/chat', {\n        state: {\n          email,\n          chatId: newChatId\n        }\n      });\n    }).catch(error => {\n      console.error('Error creating new chat:', error);\n    });\n  };\n  const handleLogout = () => {\n    auth.signOut().then(() => {\n      navigate('/login');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"md\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [user && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: user.profilePictureLink,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1,\n              marginLeft: 2\n            },\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        gutterBottom: true,\n        children: \"Chat History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 32\n        }, this),\n        onClick: handleCreateChat,\n        sx: {\n          marginBottom: 2\n        },\n        children: \"New Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: /*#__PURE__*/_jsxDEV(List, {\n          children: chats.map(chat => /*#__PURE__*/_jsxDEV(ListItem, {\n            button: true,\n            onClick: () => handleChatClick(chat.id),\n            children: /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: chat.name || 'Unnamed Chat'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)\n          }, chat.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatHistory, \"QUIbef0NbnvuWE9RsWvlxceu09I=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ChatHistory;\nexport default ChatHistory;\nvar _c;\n$RefreshReg$(_c, \"ChatHistory\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","auth","AppBar","Toolbar","Avatar","Button","List","ListItem","ListItemText","Typography","Container","Box","IconButton","Paper","AddIcon","LogoutIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHistory","_s","_location$state","_auth$currentUser","chats","setChats","user","setUser","navigate","location","email","state","currentUser","get","then","response","data","catch","error","console","handleChatClick","chatId","handleCreateChat","newChat","name","messages","post","newChatId","id","handleLogout","signOut","maxWidth","children","position","src","profilePictureLink","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","flexGrow","marginLeft","color","onClick","marginTop","gutterBottom","startIcon","marginBottom","elevation","map","chat","button","primary","_c","$RefreshReg$"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/chathistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport {\n    AppBar,\n    Toolbar,\n    Avatar,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n    Container,\n    Box,\n    IconButton,\n    Paper,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LogoutIcon from '@mui/icons-material/Logout';\n\nconst ChatHistory = () => {\n    const [chats, setChats] = useState([]);\n    const [user, setUser] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const email = location.state?.email || auth.currentUser?.email;\n\n    useEffect(() => {\n        if (email) {\n            // Fetch user-specific chats when the component mounts\n            axios.get(`http://localhost:8080/chats/user/${email}`)\n                .then(response => {\n                    setChats(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching chats:', error);\n                });\n\n            // Fetch user information\n            axios.get(`http://localhost:8080/users/${email}`)\n                .then(response => {\n                    setUser(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching user information:', error);\n                });\n        }\n    }, [email]);\n\n    const handleChatClick = (chatId) => {\n        // Navigate to the chat page with the selected chat ID and user email\n        navigate('/chat', { state: { email, chatId } });\n    };\n\n    const handleCreateChat = () => {\n        // Create a new chat with null data\n        const newChat = {\n            name: null,\n            messages: []\n        };\n\n        axios.post(`http://localhost:8080/chats/${email}`, newChat)\n            .then(response => {\n                const newChatId = response.data.id;\n                navigate('/chat', { state: { email, chatId: newChatId } });\n            })\n            .catch(error => {\n                console.error('Error creating new chat:', error);\n            });\n    };\n\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            navigate('/login');\n        });\n    };\n\n    return (\n        <Container maxWidth=\"md\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {user && (\n                        <>\n                            <Avatar src={user.profilePictureLink} alt=\"Profile\" />\n                            <Typography variant=\"h6\" sx={{ flexGrow: 1, marginLeft: 2 }}>\n                                {user.name}\n                            </Typography>\n                        </>\n                    )}\n                    <IconButton color=\"inherit\" onClick={handleLogout}>\n                        <LogoutIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Box sx={{ marginTop: 2 }}>\n                <Typography variant=\"h4\" gutterBottom>\n                    Chat History\n                </Typography>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    startIcon={<AddIcon />}\n                    onClick={handleCreateChat}\n                    sx={{ marginBottom: 2 }}\n                >\n                    New Chat\n                </Button>\n                <Paper elevation={3}>\n                    <List>\n                        {chats.map(chat => (\n                            <ListItem button key={chat.id} onClick={() => handleChatClick(chat.id)}>\n                                <ListItemText primary={chat.name || 'Unnamed Chat'} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Paper>\n            </Box>\n        </Container>\n    );\n};\n\nexport default ChatHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}