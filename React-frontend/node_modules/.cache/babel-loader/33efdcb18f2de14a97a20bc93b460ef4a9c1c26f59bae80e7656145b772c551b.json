{"ast":null,"code":"var _jsxFileName = \"E:\\\\Attendance SAAS\\\\attendance-tracker-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography } from '@mui/material';\nimport { auth, googleProvider } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\nimport { setUserData } from '../utils/userData'; // Utility for setting user data in local storage or context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in when component mounts\n    const checkUser = auth.currentUser;\n    if (checkUser) {\n      navigate('/dashboard'); // Redirect to dashboard if already logged in\n    }\n  }, [navigate]);\n  const handleLogin = async () => {\n    setLoading(true); // Show loading spinner\n    try {\n      await signInWithPopup(auth, googleProvider);\n      ; // Google login popup\n      const user = result.user;\n\n      // Check if user exists in the backend\n      const userData = {\n        googleAuthId: user.uid,\n        name: user.displayName,\n        email: user.email,\n        photoURL: user.photoURL\n      };\n\n      // Send user data to the backend (Spring Boot) to create or fetch user\n      const response = await axios.post('/api/user/signup', userData);\n      if (response.status === 200) {\n        // Store user data in local storage or context\n        setUserData(response.data);\n\n        // Redirect to dashboard after successful login and user creation\n        navigate('/dashboard');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Failed to log in. Please try again.');\n    } finally {\n      setLoading(false); // Hide loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogin,\n        disabled: loading,\n        style: {\n          padding: '10px 30px'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          style: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this) : 'Login with Google'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      style: {\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"H+4YzR0wGzdyEId/VnfukG3Kr/A=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useEffect","useState","Button","CircularProgress","Typography","auth","googleProvider","useNavigate","axios","setUserData","jsxDEV","_jsxDEV","LoginComponent","_s","loading","setLoading","error","setError","navigate","checkUser","currentUser","handleLogin","signInWithPopup","user","result","userData","googleAuthId","uid","name","displayName","email","photoURL","response","post","status","data","console","style","textAlign","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","padding","size","_c","$RefreshReg$"],"sources":["E:/Attendance SAAS/attendance-tracker-frontend/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography } from '@mui/material';\nimport { auth, googleProvider } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\nimport { setUserData } from '../utils/userData'; // Utility for setting user data in local storage or context\n\nconst LoginComponent = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Check if user is already logged in when component mounts\n        const checkUser = auth.currentUser;\n        if (checkUser) {\n            navigate('/dashboard'); // Redirect to dashboard if already logged in\n        }\n    }, [navigate]);\n\n    const handleLogin = async () => {\n        setLoading(true); // Show loading spinner\n        try {\n            await signInWithPopup(auth, googleProvider);; // Google login popup\n            const user = result.user;\n\n            // Check if user exists in the backend\n            const userData = {\n                googleAuthId: user.uid,\n                name: user.displayName,\n                email: user.email,\n                photoURL: user.photoURL,\n            };\n\n            // Send user data to the backend (Spring Boot) to create or fetch user\n            const response = await axios.post('/api/user/signup', userData);\n\n            if (response.status === 200) {\n                // Store user data in local storage or context\n                setUserData(response.data);\n\n                // Redirect to dashboard after successful login and user creation\n                navigate('/dashboard');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            setError('Failed to log in. Please try again.');\n        } finally {\n            setLoading(false); // Hide loading spinner\n        }\n    };\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n            <Typography variant=\"h4\">Login to Your Account</Typography>\n            <div style={{ marginTop: '20px' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleLogin}\n                    disabled={loading}\n                    style={{ padding: '10px 30px' }}\n                >\n                    {loading ? (\n                        <CircularProgress size={24} style={{ color: 'white' }} />\n                    ) : (\n                        'Login with Google'\n                    )}\n                </Button>\n            </div>\n            {error && (\n                <Typography color=\"error\" style={{ marginTop: '20px' }}>\n                    {error}\n                </Typography>\n            )}\n        </div>\n    );\n};\n\nexport default LoginComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}