{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Pages\\\\Learn.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Button, Typography, Box, Container, List, ListItem, ListItemText, ListItemIcon, CircularProgress } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport YouTube from 'react-youtube';\n\n// YouTube video options\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst youtubeOpts = {\n  height: '390',\n  width: '640',\n  playerVars: {\n    autoplay: 0,\n    controls: 1,\n    rel: 0,\n    // Don't show related videos\n    modestbranding: 1,\n    // Hide YouTube logo\n    origin: window.location.origin // Add origin for security\n  }\n};\n\n// Extract YouTube video ID from URL\nconst getYouTubeVideoId = url => {\n  if (!url) return null;\n\n  // Handle different YouTube URL formats\n  const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n  const match = url.match(regExp);\n  return match && match[2].length === 11 ? match[2] : null;\n};\nconst Learn = () => {\n  _s();\n  const {\n    courseId,\n    lessonId\n  } = useParams();\n  const [course, setCourse] = useState(null);\n  const [lesson, setLesson] = useState(null);\n  const [completedLessons, setCompletedLessons] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  const [videoError, setVideoError] = useState(false);\n  useEffect(() => {\n    const fetchCourse = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Check if user has completed intro quiz\n        const introQuizResponse = await axios.get(`http://localhost:8080/users/${user.id}/courses/${courseId}/intro-quiz-summaries`);\n        if (!introQuizResponse.data || introQuizResponse.data.length === 0) {\n          navigate(`/courses/${courseId}/introductory-quiz`);\n          return;\n        }\n        const [courseResponse, lessonResponse, completedLessonsResponse] = await Promise.all([axios.get(`http://localhost:8080/courses/${courseId}`), axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}`),\n        // This is the updated endpoint\n        axios.get(`http://localhost:8080/courses/${courseId}/users/${user.id}/completed-lessons`)]);\n        setCourse(courseResponse.data);\n        setLesson(lessonResponse.data);\n        setCompletedLessons(completedLessonsResponse.data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (user && courseId && lessonId) {\n      fetchCourse();\n    }\n  }, [courseId, lessonId, user, navigate]);\n  const handleQuiz = async () => {\n    try {\n      // Check if quiz already completed\n      const quizStatusResponse = await axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}/users/${user.id}/quiz-status`);\n      if (quizStatusResponse.data && quizStatusResponse.data.completed) {\n        // Quiz already completed\n        const currentLessonIndex = course.lessons.findIndex(l => l.id === parseInt(lessonId));\n        const nextLesson = course.lessons[currentLessonIndex + 1];\n        if (nextLesson) {\n          navigate(`/learn/${courseId}/${nextLesson.id}`);\n        } else {\n          // No more lessons, navigate to final quiz\n          navigate(`/courses/${courseId}/final-quiz`);\n        }\n      } else {\n        // Quiz not completed, navigate to quiz\n        navigate(`/quiz/${courseId}/${lessonId}`);\n      }\n    } catch (error) {\n      console.error('Error checking quiz status:', error);\n      // If error, assume quiz not taken and navigate to quiz\n      navigate(`/quiz/${courseId}/${lessonId}`);\n    }\n  };\n  const handleLessonClick = clickedLessonId => {\n    // Only allow navigation to completed lessons or the next uncompleted lesson\n    const lessonIndex = course.lessons.findIndex(l => l.id === clickedLessonId);\n    const previousLessonsCompleted = course.lessons.slice(0, lessonIndex).every(l => completedLessons.some(cl => cl.id === l.id));\n    if (completedLessons.some(cl => cl.id === clickedLessonId) || previousLessonsCompleted) {\n      navigate(`/learn/${courseId}/${clickedLessonId}`);\n    } else {\n      alert('Please complete previous lessons first');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      minHeight: \"100vh\",\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      component: \"h1\",\n      mt: 4,\n      children: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flex: 1,\n        children: [lesson.youtubeVideoLink && !videoError && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(YouTube, {\n            videoId: getYouTubeVideoId(lesson.youtubeVideoLink),\n            opts: youtubeOpts,\n            onError: error => {\n              setVideoError(true);\n              console.error('YouTube Error:', error);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this), videoError && /*#__PURE__*/_jsxDEV(Box, {\n          mb: 3,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"error\",\n            children: \"Failed to load video. Please check your internet connection.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: handleQuiz,\n            children: \"Attend Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          mt: 2,\n          children: lesson.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          component: \"p\",\n          mt: 2,\n          children: lesson.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        ml: 4,\n        width: \"300px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"h2\",\n          children: \"Lessons\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(List, {\n          children: course.lessons.map(l => /*#__PURE__*/_jsxDEV(ListItem, {\n            onClick: () => handleLessonClick(l.id),\n            sx: {\n              // Using sx prop instead of style\n              backgroundColor: completedLessons.some(cl => cl.id === l.id) ? '#d3ffd3' : '#ffd3d3',\n              cursor: 'pointer',\n              // Add pointer cursor\n              '&:hover': {\n                opacity: 0.9\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n              children: completedLessons.some(cl => cl.id === l.id) ? /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(RadioButtonUncheckedIcon, {\n                color: \"secondary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: l.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)]\n          }, l.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 9\n  }, this);\n};\n_s(Learn, \"kZlp9QyZHEEPjQMU4OxyT7p/7Xw=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Learn;\nexport default Learn;\nvar _c;\n$RefreshReg$(_c, \"Learn\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","axios","UserContext","Button","Typography","Box","Container","List","ListItem","ListItemText","ListItemIcon","CircularProgress","CheckCircleIcon","RadioButtonUncheckedIcon","YouTube","jsxDEV","_jsxDEV","youtubeOpts","height","width","playerVars","autoplay","controls","rel","modestbranding","origin","window","location","getYouTubeVideoId","url","regExp","match","length","Learn","_s","courseId","lessonId","course","setCourse","lesson","setLesson","completedLessons","setCompletedLessons","loading","setLoading","error","setError","user","navigate","videoError","setVideoError","fetchCourse","introQuizResponse","get","id","data","courseResponse","lessonResponse","completedLessonsResponse","Promise","all","console","message","handleQuiz","quizStatusResponse","completed","currentLessonIndex","lessons","findIndex","l","parseInt","nextLesson","handleLessonClick","clickedLessonId","lessonIndex","previousLessonsCompleted","slice","every","some","cl","alert","display","justifyContent","alignItems","minHeight","children","fileName","_jsxFileName","lineNumber","columnNumber","color","variant","component","mt","name","flex","youtubeVideoLink","mb","videoId","opts","onError","onClick","description","ml","map","sx","backgroundColor","cursor","opacity","primary","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Pages/Learn.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Button, Typography, Box, Container, List, ListItem, ListItemText, ListItemIcon, CircularProgress } from '@mui/material';\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport YouTube from 'react-youtube';\n\n// YouTube video options\nconst youtubeOpts = {\n    height: '390',\n    width: '640',\n    playerVars: {\n        autoplay: 0,\n        controls: 1,\n        rel: 0, // Don't show related videos\n        modestbranding: 1, // Hide YouTube logo\n        origin: window.location.origin // Add origin for security\n    }\n};\n\n// Extract YouTube video ID from URL\nconst getYouTubeVideoId = (url) => {\n    if (!url) return null;\n    \n    // Handle different YouTube URL formats\n    const regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|&v=)([^#&?]*).*/;\n    const match = url.match(regExp);\n\n    return (match && match[2].length === 11) ? match[2] : null;\n};\n\nconst Learn = () => {\n    const { courseId, lessonId } = useParams();\n    const [course, setCourse] = useState(null);\n    const [lesson, setLesson] = useState(null);\n    const [completedLessons, setCompletedLessons] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const { user } = useContext(UserContext);\n    const navigate = useNavigate();\n    const [videoError, setVideoError] = useState(false);\n\n    useEffect(() => {\n        const fetchCourse = async () => {\n            setLoading(true);\n            setError(null);\n            try {\n                // Check if user has completed intro quiz\n                const introQuizResponse = await axios.get(\n                    `http://localhost:8080/users/${user.id}/courses/${courseId}/intro-quiz-summaries`\n                );\n\n                if (!introQuizResponse.data || introQuizResponse.data.length === 0) {\n                    navigate(`/courses/${courseId}/introductory-quiz`);\n                    return;\n                }\n\n                const [courseResponse, lessonResponse, completedLessonsResponse] = await Promise.all([\n                    axios.get(`http://localhost:8080/courses/${courseId}`),\n                    axios.get(`http://localhost:8080/courses/${courseId}/lessons/${lessonId}`), // This is the updated endpoint\n                    axios.get(`http://localhost:8080/courses/${courseId}/users/${user.id}/completed-lessons`)\n                ]);\n\n                setCourse(courseResponse.data);\n                setLesson(lessonResponse.data);\n                setCompletedLessons(completedLessonsResponse.data);\n            } catch (error) {\n                console.error('Error fetching data:', error);\n                setError(error.message);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        if (user && courseId && lessonId) {\n            fetchCourse();\n        }\n    }, [courseId, lessonId, user, navigate]);\n\n    const handleQuiz = async () => {\n        try {\n            // Check if quiz already completed\n            const quizStatusResponse = await axios.get(\n                `http://localhost:8080/courses/${courseId}/lessons/${lessonId}/users/${user.id}/quiz-status`\n            );\n\n            if (quizStatusResponse.data && quizStatusResponse.data.completed) {\n                // Quiz already completed\n                const currentLessonIndex = course.lessons.findIndex(l => l.id === parseInt(lessonId));\n                const nextLesson = course.lessons[currentLessonIndex + 1];\n                \n                if (nextLesson) {\n                    navigate(`/learn/${courseId}/${nextLesson.id}`);\n                } else {\n                    // No more lessons, navigate to final quiz\n                    navigate(`/courses/${courseId}/final-quiz`);\n                }\n            } else {\n                // Quiz not completed, navigate to quiz\n                navigate(`/quiz/${courseId}/${lessonId}`);\n            }\n        } catch (error) {\n            console.error('Error checking quiz status:', error);\n            // If error, assume quiz not taken and navigate to quiz\n            navigate(`/quiz/${courseId}/${lessonId}`);\n        }\n    };\n\n    const handleLessonClick = (clickedLessonId) => {\n        // Only allow navigation to completed lessons or the next uncompleted lesson\n        const lessonIndex = course.lessons.findIndex(l => l.id === clickedLessonId);\n        const previousLessonsCompleted = course.lessons\n            .slice(0, lessonIndex)\n            .every(l => completedLessons.some(cl => cl.id === l.id));\n\n        if (completedLessons.some(cl => cl.id === clickedLessonId) || previousLessonsCompleted) {\n            navigate(`/learn/${courseId}/${clickedLessonId}`);\n        } else {\n            alert('Please complete previous lessons first');\n        }\n    };\n\n    if (loading) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n                <CircularProgress />\n            </Box>\n        );\n    }\n\n    if (error) {\n        return (\n            <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"100vh\">\n                <Typography color=\"error\">{error}</Typography>\n            </Box>\n        );\n    }\n\n    return (\n        <Container>\n            <Typography variant=\"h4\" component=\"h1\" mt={4}>\n                {course.name}\n            </Typography>\n            <Box display=\"flex\" mt={4}>\n                <Box flex={1}>\n                    {lesson.youtubeVideoLink && !videoError && (\n                        <Box mb={3}>\n                            <YouTube \n                                videoId={getYouTubeVideoId(lesson.youtubeVideoLink)} \n                                opts={youtubeOpts}\n                                onError={(error) => {\n                                    setVideoError(true);\n                                    console.error('YouTube Error:', error);\n                                }}\n                            />\n                        </Box>\n                    )}\n                    {videoError && (\n                        <Box mb={3}>\n                            <Typography color=\"error\">\n                                Failed to load video. Please check your internet connection.\n                            </Typography>\n                        </Box>\n                    )}\n                    <Box mt={2}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleQuiz}>\n                            Attend Quiz\n                        </Button>\n                    </Box>\n                    <Typography variant=\"h6\" component=\"h2\" mt={2}>\n                        {lesson.name}\n                    </Typography>\n                    <Typography variant=\"body1\" component=\"p\" mt={2}>\n                        {lesson.description}\n                    </Typography>\n                </Box>\n                <Box ml={4} width=\"300px\">\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Lessons\n                    </Typography>\n                    <List>\n                        {course.lessons.map((l) => (\n                            <ListItem\n                                key={l.id}\n                                onClick={() => handleLessonClick(l.id)}\n                                sx={{  // Using sx prop instead of style\n                                    backgroundColor: completedLessons.some(cl => cl.id === l.id) \n                                        ? '#d3ffd3' \n                                        : '#ffd3d3',\n                                    cursor: 'pointer', // Add pointer cursor\n                                    '&:hover': {\n                                        opacity: 0.9\n                                    }\n                                }}\n                            >\n                                <ListItemIcon>\n                                    {completedLessons.some(cl => cl.id === l.id) ? (\n                                        <CheckCircleIcon color=\"primary\" />\n                                    ) : (\n                                        <RadioButtonUncheckedIcon color=\"secondary\" />\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText primary={l.name} />\n                            </ListItem>\n                        ))}\n                    </List>\n                </Box>\n            </Box>\n        </Container>\n    );\n};\n\nexport default Learn;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}