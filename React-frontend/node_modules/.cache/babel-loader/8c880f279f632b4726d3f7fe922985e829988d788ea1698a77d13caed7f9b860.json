{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chatbot(Meta Llama 3.1 8B)\\\\React-frontend\\\\src\\\\components\\\\chat.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const {\n    chatId\n  } = useParams();\n  const location = useLocation();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n  useEffect(() => {\n    // Fetch chat messages when the component mounts\n    axios.get(`http://localhost:8080/chats/${chatId}`).then(response => {\n      setMessages(response.data.messages);\n    }).catch(error => {\n      console.error('Error fetching chat messages:', error);\n    });\n  }, [chatId]);\n  const handleSend = () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: 'user',\n      content: input,\n      timestamp: new Date().toISOString()\n    };\n\n    // Add user message to the chat\n    axios.put(`http://localhost:8080/chats/${chatId}/messages`, userMessage).then(response => {\n      setMessages([...messages, userMessage]);\n\n      // Send user input to the Flask backend API\n      axios.post('http://127.0.0.1:5000/chat', {\n        message: input\n      }).then(apiResponse => {\n        const aiMessage = {\n          sender: 'ai',\n          content: apiResponse.data.response,\n          timestamp: new Date().toISOString()\n        };\n\n        // Add AI message to the chat\n        axios.put(`http://localhost:8080/chats/${chatId}/messages`, aiMessage).then(() => {\n          setMessages(prevMessages => [...prevMessages, aiMessage]);\n        }).catch(error => {\n          console.error('Error adding AI message to chat:', error);\n        });\n      }).catch(error => {\n        console.error('Error getting AI response:', error);\n      });\n    }).catch(error => {\n      console.error('Error adding user message to chat:', error);\n    });\n    setInput('');\n  };\n  const formatMessageContent = content => {\n    // Replace text between double asterisks with bold text\n    const formattedContent = convertToNormalText(content).replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n    return {\n      __html: formattedContent\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-history\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: new Date(message.timestamp).toLocaleTimeString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"content\",\n          style: {\n            whiteSpace: 'pre-wrap'\n          },\n          dangerouslySetInnerHTML: formatMessageContent(message.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Type your message...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Chat, \"3uJNIER7eVfTMZ/vYkJux0VtEik=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useLocation","axios","jsxDEV","_jsxDEV","Chat","_s","chatId","location","messages","setMessages","input","setInput","get","then","response","data","catch","error","console","handleSend","trim","userMessage","sender","content","timestamp","Date","toISOString","put","post","message","apiResponse","aiMessage","prevMessages","formatMessageContent","formattedContent","convertToNormalText","replace","__html","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","index","toLocaleTimeString","style","whiteSpace","dangerouslySetInnerHTML","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useLocation } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Chat = () => {\n    const { chatId } = useParams();\n    const location = useLocation();\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n\n    useEffect(() => {\n        // Fetch chat messages when the component mounts\n        axios.get(`http://localhost:8080/chats/${chatId}`)\n            .then(response => {\n                setMessages(response.data.messages);\n            })\n            .catch(error => {\n                console.error('Error fetching chat messages:', error);\n            });\n    }, [chatId]);\n\n    const handleSend = () => {\n        if (!input.trim()) return;\n\n        const userMessage = {\n            sender: 'user',\n            content: input,\n            timestamp: new Date().toISOString()\n        };\n\n        // Add user message to the chat\n        axios.put(`http://localhost:8080/chats/${chatId}/messages`, userMessage)\n            .then(response => {\n                setMessages([...messages, userMessage]);\n\n                // Send user input to the Flask backend API\n                axios.post('http://127.0.0.1:5000/chat', { message: input })\n                    .then(apiResponse => {\n                        const aiMessage = {\n                            sender: 'ai',\n                            content: apiResponse.data.response,\n                            timestamp: new Date().toISOString()\n                        };\n\n                        // Add AI message to the chat\n                        axios.put(`http://localhost:8080/chats/${chatId}/messages`, aiMessage)\n                            .then(() => {\n                                setMessages(prevMessages => [...prevMessages, aiMessage]);\n                            })\n                            .catch(error => {\n                                console.error('Error adding AI message to chat:', error);\n                            });\n                    })\n                    .catch(error => {\n                        console.error('Error getting AI response:', error);\n                    });\n            })\n            .catch(error => {\n                console.error('Error adding user message to chat:', error);\n            });\n\n        setInput('');\n    };\n\n    const formatMessageContent = (content) => {\n        // Replace text between double asterisks with bold text\n        const formattedContent = convertToNormalText(content).replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n        return { __html: formattedContent };\n    };\n\n    return (\n        <div>\n            <h1>Chat</h1>\n            <div className=\"chat-history\">\n                {messages.map((message, index) => (\n                    <div key={index} className={`message ${message.sender}`}>\n                        <span className=\"timestamp\">{new Date(message.timestamp).toLocaleTimeString()}</span>\n                        <span className=\"content\" style={{ whiteSpace: 'pre-wrap' }} dangerouslySetInnerHTML={formatMessageContent(message.content)}></span>\n                    </div>\n                ))}\n            </div>\n            <div className=\"chat-input\">\n                <input\n                    type=\"text\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type your message...\"\n                />\n                <button onClick={handleSend}>Send</button>\n            </div>\n        </div>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}