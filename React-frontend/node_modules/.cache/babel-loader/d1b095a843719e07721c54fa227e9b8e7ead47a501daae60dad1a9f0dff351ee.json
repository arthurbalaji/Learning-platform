{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chatbot(Meta Llama 3.1 8B)\\\\React-frontend\\\\src\\\\components\\\\chathistory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport { AppBar, Toolbar, Avatar, Button, List, ListItem, ListItemText, Typography, Container, Box, IconButton, Paper, Grid } from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Chat from './chat';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatHistory = () => {\n  _s();\n  var _location$state, _auth$currentUser;\n  const [chats, setChats] = useState([]);\n  const [user, setUser] = useState(null);\n  const [selectedChatId, setSelectedChatId] = useState(null);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const email = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.email) || ((_auth$currentUser = auth.currentUser) === null || _auth$currentUser === void 0 ? void 0 : _auth$currentUser.email);\n  useEffect(() => {\n    if (email) {\n      // Fetch user-specific chats when the component mounts\n      axios.get(`http://localhost:8080/chats/user/${email}`).then(response => {\n        setChats(response.data);\n      }).catch(error => {\n        console.error('Error fetching chats:', error);\n      });\n\n      // Fetch user information\n      axios.get(`http://localhost:8080/users/${email}`).then(response => {\n        setUser(response.data);\n      }).catch(error => {\n        console.error('Error fetching user information:', error);\n      });\n    }\n  }, [email]);\n  const handleChatClick = chatId => {\n    // Set the selected chat ID\n    setSelectedChatId(chatId);\n  };\n  const handleCreateChat = () => {\n    // Create a new chat with null data\n    const newChat = {\n      name: null,\n      messages: []\n    };\n    axios.post(`http://localhost:8080/chats/${email}`, newChat).then(response => {\n      const newChatId = response.data.id;\n      setSelectedChatId(newChatId);\n    }).catch(error => {\n      console.error('Error creating new chat:', error);\n    });\n  };\n  const handleLogout = () => {\n    auth.signOut().then(() => {\n      navigate('/login');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      position: \"static\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: [user && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            src: user.profilePictureLink,\n            alt: \"Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              flexGrow: 1,\n              marginLeft: 2\n            },\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          onClick: handleLogout,\n          children: /*#__PURE__*/_jsxDEV(LogoutIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            gutterBottom: true,\n            children: \"Chat History\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            startIcon: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 40\n            }, this),\n            onClick: handleCreateChat,\n            sx: {\n              marginBottom: 2\n            },\n            children: \"New Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 3,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              children: chats.map(chat => /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: () => handleChatClick(chat.id),\n                children: /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: chat.name || 'Unnamed Chat'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 41\n                }, this)\n              }, chat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          children: selectedChatId ? /*#__PURE__*/_jsxDEV(Chat, {\n            chatId: selectedChatId,\n            email: email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"textSecondary\",\n            children: \"Select a chat to start messaging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatHistory, \"WvzEhZ/CfJRo7sV0o36BBnpoBiQ=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = ChatHistory;\nexport default ChatHistory;\nvar _c;\n$RefreshReg$(_c, \"ChatHistory\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","auth","AppBar","Toolbar","Avatar","Button","List","ListItem","ListItemText","Typography","Container","Box","IconButton","Paper","Grid","AddIcon","LogoutIcon","Chat","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatHistory","_s","_location$state","_auth$currentUser","chats","setChats","user","setUser","selectedChatId","setSelectedChatId","navigate","location","email","state","currentUser","get","then","response","data","catch","error","console","handleChatClick","chatId","handleCreateChat","newChat","name","messages","post","newChatId","id","handleLogout","signOut","maxWidth","children","position","src","profilePictureLink","alt","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","flexGrow","marginLeft","color","onClick","marginTop","container","spacing","item","xs","gutterBottom","startIcon","marginBottom","elevation","map","chat","button","primary","_c","$RefreshReg$"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/chathistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport {\n    AppBar,\n    Toolbar,\n    Avatar,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n    Container,\n    Box,\n    IconButton,\n    Paper,\n    Grid,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Chat from './chat';\n\nconst ChatHistory = () => {\n    const [chats, setChats] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectedChatId, setSelectedChatId] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const email = location.state?.email || auth.currentUser?.email;\n\n    useEffect(() => {\n        if (email) {\n            // Fetch user-specific chats when the component mounts\n            axios.get(`http://localhost:8080/chats/user/${email}`)\n                .then(response => {\n                    setChats(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching chats:', error);\n                });\n\n            // Fetch user information\n            axios.get(`http://localhost:8080/users/${email}`)\n                .then(response => {\n                    setUser(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching user information:', error);\n                });\n        }\n    }, [email]);\n\n    const handleChatClick = (chatId) => {\n        // Set the selected chat ID\n        setSelectedChatId(chatId);\n    };\n\n    const handleCreateChat = () => {\n        // Create a new chat with null data\n        const newChat = {\n            name: null,\n            messages: []\n        };\n\n        axios.post(`http://localhost:8080/chats/${email}`, newChat)\n            .then(response => {\n                const newChatId = response.data.id;\n                setSelectedChatId(newChatId);\n            })\n            .catch(error => {\n                console.error('Error creating new chat:', error);\n            });\n    };\n\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            navigate('/login');\n        });\n    };\n\n    return (\n        <Container maxWidth=\"lg\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {user && (\n                        <>\n                            <Avatar src={user.profilePictureLink} alt=\"Profile\" />\n                            <Typography variant=\"h6\" sx={{ flexGrow: 1, marginLeft: 2 }}>\n                                {user.name}\n                            </Typography>\n                        </>\n                    )}\n                    <IconButton color=\"inherit\" onClick={handleLogout}>\n                        <LogoutIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Box sx={{ marginTop: 2 }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            Chat History\n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<AddIcon />}\n                            onClick={handleCreateChat}\n                            sx={{ marginBottom: 2 }}\n                        >\n                            New Chat\n                        </Button>\n                        <Paper elevation={3}>\n                            <List>\n                                {chats.map(chat => (\n                                    <ListItem button key={chat.id} onClick={() => handleChatClick(chat.id)}>\n                                        <ListItemText primary={chat.name || 'Unnamed Chat'} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8}>\n                        {selectedChatId ? (\n                            <Chat chatId={selectedChatId} email={email} />\n                        ) : (\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                Select a chat to start messaging\n                            </Typography>\n                        )}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n};\n\nexport default ChatHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}