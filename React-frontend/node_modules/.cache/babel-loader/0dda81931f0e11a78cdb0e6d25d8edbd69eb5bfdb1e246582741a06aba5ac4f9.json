{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Pages\\\\FinalQuiz.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Container, Typography, Box, Button, RadioGroup, FormControlLabel, Radio } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinalQuiz = () => {\n  _s();\n  const {\n    courseId\n  } = useParams();\n  const [quiz, setQuiz] = useState(null);\n  const [answers, setAnswers] = useState({});\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuiz = async () => {\n      try {\n        const response = await axios.get(`http://localhost:8080/courses/${courseId}/final-quiz`);\n        setQuiz(response.data);\n      } catch (error) {\n        console.error('Error fetching quiz:', error);\n      }\n    };\n    fetchQuiz();\n  }, [courseId]);\n  const handleAnswerChange = (questionId, optionId) => {\n    setAnswers({\n      ...answers,\n      [questionId]: optionId\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!quiz || !user) {\n      alert('Quiz or user data is missing');\n      return;\n    }\n\n    // Check if all questions are answered\n    const unansweredQuestions = quiz.questions.filter(question => !answers[question.id]);\n    if (unansweredQuestions.length > 0) {\n      alert('Please answer all questions before submitting.');\n      return;\n    }\n    try {\n      const questionSummaries = quiz.questions.map(question => ({\n        question: {\n          id: question.id,\n          name: question.name\n        },\n        selectedOption: {\n          id: answers[question.id],\n          text: question.options.find(opt => opt.id === answers[question.id]).text\n        },\n        correct: question.options.find(opt => opt.id === answers[question.id]).correct\n      }));\n      const response = await axios.post(`http://localhost:8080/users/${user.id}/courses/${courseId}/final-quiz`, questionSummaries);\n      if (response.status === 201 || response.status === 200) {\n        navigate(`/quiz-summary?type=final&courseId=${courseId}&summaryId=${response.data.id}`);\n      }\n    } catch (error) {\n      console.error('Error submitting quiz:', error);\n      alert(`Failed to submit quiz: ${error.message}`);\n    }\n  };\n  if (!quiz) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        component: \"h1\",\n        children: quiz.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [quiz.questions.map(question => /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            component: \"h2\",\n            children: question.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(RadioGroup, {\n            value: answers[question.id] || '',\n            onChange: e => handleAnswerChange(question.id, e.target.value),\n            children: question.options.map(option => /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              value: option.id,\n              control: /*#__PURE__*/_jsxDEV(Radio, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 50\n              }, this),\n              label: option.text\n            }, option.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 29\n          }, this)]\n        }, question.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            children: \"Submit Quiz\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(FinalQuiz, \"acRgpWo9uVSkXZ/BbQ+x1F3+cQA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = FinalQuiz;\nexport default FinalQuiz;\nvar _c;\n$RefreshReg$(_c, \"FinalQuiz\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useParams","useNavigate","axios","UserContext","Container","Typography","Box","Button","RadioGroup","FormControlLabel","Radio","jsxDEV","_jsxDEV","FinalQuiz","_s","courseId","quiz","setQuiz","answers","setAnswers","user","navigate","fetchQuiz","response","get","data","error","console","handleAnswerChange","questionId","optionId","handleSubmit","e","preventDefault","alert","unansweredQuestions","questions","filter","question","id","length","questionSummaries","map","name","selectedOption","text","options","find","opt","correct","post","status","message","children","fileName","_jsxFileName","lineNumber","columnNumber","mt","variant","component","onSubmit","value","onChange","target","option","control","label","type","color","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Pages/FinalQuiz.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../Contexts/User';\nimport { Container, Typography, Box, Button, RadioGroup, FormControlLabel, Radio } from '@mui/material';\n\nconst FinalQuiz = () => {\n    const { courseId } = useParams();\n    const [quiz, setQuiz] = useState(null);\n    const [answers, setAnswers] = useState({});\n    const { user } = useContext(UserContext);\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const fetchQuiz = async () => {\n            try {\n                const response = await axios.get(`http://localhost:8080/courses/${courseId}/final-quiz`);\n                setQuiz(response.data);\n            } catch (error) {\n                console.error('Error fetching quiz:', error);\n            }\n        };\n\n        fetchQuiz();\n    }, [courseId]);\n\n    const handleAnswerChange = (questionId, optionId) => {\n        setAnswers({ ...answers, [questionId]: optionId });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        \n        if (!quiz || !user) {\n            alert('Quiz or user data is missing');\n            return;\n        }\n\n        // Check if all questions are answered\n        const unansweredQuestions = quiz.questions.filter(\n            question => !answers[question.id]\n        );\n        \n        if (unansweredQuestions.length > 0) {\n            alert('Please answer all questions before submitting.');\n            return;\n        }\n\n        try {\n            const questionSummaries = quiz.questions.map(question => ({\n                question: {\n                    id: question.id,\n                    name: question.name\n                },\n                selectedOption: {\n                    id: answers[question.id],\n                    text: question.options.find(opt => opt.id === answers[question.id]).text\n                },\n                correct: question.options.find(opt => opt.id === answers[question.id]).correct\n            }));\n\n            const response = await axios.post(\n                `http://localhost:8080/users/${user.id}/courses/${courseId}/final-quiz`,\n                questionSummaries\n            );\n\n            if (response.status === 201 || response.status === 200) {\n                navigate(`/quiz-summary?type=final&courseId=${courseId}&summaryId=${response.data.id}`);\n            }\n        } catch (error) {\n            console.error('Error submitting quiz:', error);\n            alert(`Failed to submit quiz: ${error.message}`);\n        }\n    };\n\n    if (!quiz) {\n        return <div>Loading...</div>;\n    }\n\n    return (\n        <Container>\n            <Box mt={4}>\n                <Typography variant=\"h4\" component=\"h1\">\n                    {quiz.name}\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    {quiz.questions.map((question) => (\n                        <Box key={question.id} mt={4}>\n                            <Typography variant=\"h6\" component=\"h2\">\n                                {question.text}\n                            </Typography>\n                            <RadioGroup\n                                value={answers[question.id] || ''}\n                                onChange={(e) => handleAnswerChange(question.id, e.target.value)}\n                            >\n                                {question.options.map((option) => (\n                                    <FormControlLabel\n                                        key={option.id}\n                                        value={option.id}\n                                        control={<Radio />}\n                                        label={option.text}\n                                    />\n                                ))}\n                            </RadioGroup>\n                        </Box>\n                    ))}\n                    <Box mt={4}>\n                        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                            Submit Quiz\n                        </Button>\n                    </Box>\n                </form>\n            </Box>\n        </Container>\n    );\n};\n\nexport default FinalQuiz;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}