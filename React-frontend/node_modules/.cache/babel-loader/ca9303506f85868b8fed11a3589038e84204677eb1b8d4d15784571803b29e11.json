{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import{TextField,Button,CircularProgress,Typography,Box,Paper}from'@mui/material';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=_ref=>{let{chatId,email}=_ref;const[messages,setMessages]=useState([]);const[input,setInput]=useState('');const[chatName,setChatName]=useState('Untitled Chat');const[loading,setLoading]=useState(false);useEffect(()=>{if(chatId){// Fetch chat messages and chat name when the component mounts\naxios.get(`http://localhost:8080/chats/${chatId}`).then(response=>{setMessages(response.data.messages||[]);setChatName(response.data.name||'Untitled Chat');}).catch(error=>{console.error('Error fetching chat messages:',error);});}},[chatId]);const handleSend=()=>{if(!input.trim())return;const userMessage={sender:'user',content:input,timestamp:new Date().toISOString()};// Add user message to the chat\naxios.put(`http://localhost:8080/chats/${chatId}/messages`,userMessage).then(response=>{setMessages([...messages,userMessage]);setLoading(true);// Send user input to the Flask backend API\naxios.post('http://127.0.0.1:5000/chat',{message:input}).then(apiResponse=>{const aiMessage={sender:'ai',content:apiResponse.data.response,timestamp:new Date().toISOString()};// Add AI message to the chat\naxios.put(`http://localhost:8080/chats/${chatId}/messages`,aiMessage).then(()=>{setMessages(prevMessages=>[...prevMessages,aiMessage]);setLoading(false);}).catch(error=>{console.error('Error adding AI message to chat:',error);setLoading(false);});}).catch(error=>{console.error('Error getting AI response:',error);setLoading(false);});}).catch(error=>{console.error('Error adding user message to chat:',error);});setInput('');};const handleChatNameChange=e=>{setChatName(e.target.value);};const handleChatNameBlur=()=>{// Update chat name in the backend\naxios.put(`http://localhost:8080/chats/${chatId}`,{name:chatName}).catch(error=>{console.error('Error updating chat name:',error);});};const formatMessageContent=content=>{// Replace text between double asterisks with bold text\nconst formattedContent=content.replace(/\\*\\*(.*?)\\*\\*/g,'<strong>$1</strong>');return{__html:formattedContent};};const formatTimestamp=timestamp=>{return new Date(timestamp).toLocaleString();};return/*#__PURE__*/_jsxs(Box,{sx:{padding:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Chat\"}),/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",value:chatName,onChange:handleChatNameChange,onBlur:handleChatNameBlur,placeholder:\"Enter chat name\",sx:{marginBottom:2}}),/*#__PURE__*/_jsxs(Paper,{elevation:3,sx:{padding:2,marginBottom:2,maxHeight:'60vh',overflowY:'auto'},children:[messages.map((message,index)=>/*#__PURE__*/_jsxs(Box,{sx:{marginBottom:2},children:[/*#__PURE__*/_jsx(Typography,{variant:\"caption\",color:\"textSecondary\",children:formatTimestamp(message.timestamp)}),/*#__PURE__*/_jsx(Typography,{variant:\"body1\",dangerouslySetInnerHTML:formatMessageContent(message.content),sx:{whiteSpace:'pre-wrap'}})]},index)),loading&&/*#__PURE__*/_jsx(Box,{sx:{display:'flex',justifyContent:'center',alignItems:'center',marginTop:2},children:/*#__PURE__*/_jsx(CircularProgress,{})})]}),/*#__PURE__*/_jsxs(Box,{sx:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(TextField,{fullWidth:true,variant:\"outlined\",value:input,onChange:e=>setInput(e.target.value),placeholder:\"Type your message...\",sx:{marginRight:2}}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",onClick:handleSend,children:\"Send\"})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","axios","TextField","Button","CircularProgress","Typography","Box","Paper","jsx","_jsx","jsxs","_jsxs","Chat","_ref","chatId","email","messages","setMessages","input","setInput","chatName","setChatName","loading","setLoading","get","then","response","data","name","catch","error","console","handleSend","trim","userMessage","sender","content","timestamp","Date","toISOString","put","post","message","apiResponse","aiMessage","prevMessages","handleChatNameChange","e","target","value","handleChatNameBlur","formatMessageContent","formattedContent","replace","__html","formatTimestamp","toLocaleString","sx","padding","children","variant","gutterBottom","fullWidth","onChange","onBlur","placeholder","marginBottom","elevation","maxHeight","overflowY","map","index","color","dangerouslySetInnerHTML","whiteSpace","display","justifyContent","alignItems","marginTop","marginRight","onClick"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { TextField, Button, CircularProgress, Typography, Box, Paper } from '@mui/material';\n\nconst Chat = ({ chatId, email }) => {\n    const [messages, setMessages] = useState([]);\n    const [input, setInput] = useState('');\n    const [chatName, setChatName] = useState('Untitled Chat');\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        if (chatId) {\n            // Fetch chat messages and chat name when the component mounts\n            axios.get(`http://localhost:8080/chats/${chatId}`)\n                .then(response => {\n                    setMessages(response.data.messages || []);\n                    setChatName(response.data.name || 'Untitled Chat');\n                })\n                .catch(error => {\n                    console.error('Error fetching chat messages:', error);\n                });\n        }\n    }, [chatId]);\n\n    const handleSend = () => {\n        if (!input.trim()) return;\n\n        const userMessage = {\n            sender: 'user',\n            content: input,\n            timestamp: new Date().toISOString()\n        };\n\n        // Add user message to the chat\n        axios.put(`http://localhost:8080/chats/${chatId}/messages`, userMessage)\n            .then(response => {\n                setMessages([...messages, userMessage]);\n                setLoading(true);\n\n                // Send user input to the Flask backend API\n                axios.post('http://127.0.0.1:5000/chat', { message: input })\n                    .then(apiResponse => {\n                        const aiMessage = {\n                            sender: 'ai',\n                            content: apiResponse.data.response,\n                            timestamp: new Date().toISOString()\n                        };\n\n                        // Add AI message to the chat\n                        axios.put(`http://localhost:8080/chats/${chatId}/messages`, aiMessage)\n                            .then(() => {\n                                setMessages(prevMessages => [...prevMessages, aiMessage]);\n                                setLoading(false);\n                            })\n                            .catch(error => {\n                                console.error('Error adding AI message to chat:', error);\n                                setLoading(false);\n                            });\n                    })\n                    .catch(error => {\n                        console.error('Error getting AI response:', error);\n                        setLoading(false);\n                    });\n            })\n            .catch(error => {\n                console.error('Error adding user message to chat:', error);\n            });\n\n        setInput('');\n    };\n\n    const handleChatNameChange = (e) => {\n        setChatName(e.target.value);\n    };\n\n    const handleChatNameBlur = () => {\n        // Update chat name in the backend\n        axios.put(`http://localhost:8080/chats/${chatId}`, { name: chatName })\n            .catch(error => {\n                console.error('Error updating chat name:', error);\n            });\n    };\n\n    const formatMessageContent = (content) => {\n        // Replace text between double asterisks with bold text\n        const formattedContent = content.replace(/\\*\\*(.*?)\\*\\*/g, '<strong>$1</strong>');\n        return { __html: formattedContent };\n    };\n\n    const formatTimestamp = (timestamp) => {\n        return new Date(timestamp).toLocaleString();\n    };\n\n    return (\n        <Box sx={{ padding: 2 }}>\n            <Typography variant=\"h4\" gutterBottom>\n                Chat\n            </Typography>\n            <TextField\n                fullWidth\n                variant=\"outlined\"\n                value={chatName}\n                onChange={handleChatNameChange}\n                onBlur={handleChatNameBlur}\n                placeholder=\"Enter chat name\"\n                sx={{ marginBottom: 2 }}\n            />\n            <Paper elevation={3} sx={{ padding: 2, marginBottom: 2, maxHeight: '60vh', overflowY: 'auto' }}>\n                {messages.map((message, index) => (\n                    <Box key={index} sx={{ marginBottom: 2 }}>\n                        <Typography variant=\"caption\" color=\"textSecondary\">\n                            {formatTimestamp(message.timestamp)}\n                        </Typography>\n                        <Typography\n                            variant=\"body1\"\n                            dangerouslySetInnerHTML={formatMessageContent(message.content)}\n                            sx={{ whiteSpace: 'pre-wrap' }}\n                        />\n                    </Box>\n                ))}\n                {loading && (\n                    <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', marginTop: 2 }}>\n                        <CircularProgress />\n                    </Box>\n                )}\n            </Paper>\n            <Box sx={{ display: 'flex', alignItems: 'center' }}>\n                <TextField\n                    fullWidth\n                    variant=\"outlined\"\n                    value={input}\n                    onChange={(e) => setInput(e.target.value)}\n                    placeholder=\"Type your message...\"\n                    sx={{ marginRight: 2 }}\n                />\n                <Button variant=\"contained\" color=\"primary\" onClick={handleSend}>\n                    Send\n                </Button>\n            </Box>\n        </Box>\n    );\n};\n\nexport default Chat;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}