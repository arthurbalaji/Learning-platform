{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate,useLocation}from'react-router-dom';import axios from'axios';import{auth}from'../firebase';import{AppBar,Toolbar,Avatar,Button,List,ListItem,ListItemText,Typography,Container,Box,IconButton,Paper,Grid}from'@mui/material';import AddIcon from'@mui/icons-material/Add';import LogoutIcon from'@mui/icons-material/Logout';import Chat from'./chat';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatHistory=()=>{var _location$state,_auth$currentUser;const[chats,setChats]=useState([]);const[user,setUser]=useState(null);const[selectedChatId,setSelectedChatId]=useState(null);const navigate=useNavigate();const location=useLocation();const email=((_location$state=location.state)===null||_location$state===void 0?void 0:_location$state.email)||((_auth$currentUser=auth.currentUser)===null||_auth$currentUser===void 0?void 0:_auth$currentUser.email);useEffect(()=>{if(email){// Fetch user-specific chats when the component mounts\naxios.get(`http://localhost:8080/chats/user/${email}`).then(response=>{setChats(response.data);}).catch(error=>{console.error('Error fetching chats:',error);});// Fetch user information\naxios.get(`http://localhost:8080/users/${email}`).then(response=>{setUser(response.data);}).catch(error=>{console.error('Error fetching user information:',error);});}},[email]);const handleChatClick=chatId=>{// Set the selected chat ID\nsetSelectedChatId(chatId);};const handleCreateChat=()=>{// Create a new chat with null data\nconst newChat={name:null,messages:[]};axios.post(`http://localhost:8080/chats/${email}`,newChat).then(response=>{const newChatId=response.data.id;setSelectedChatId(newChatId);}).catch(error=>{console.error('Error creating new chat:',error);});};const handleLogout=()=>{auth.signOut().then(()=>{navigate('/login');});};return/*#__PURE__*/_jsxs(Container,{maxWidth:\"lg\",children:[/*#__PURE__*/_jsx(AppBar,{position:\"static\",children:/*#__PURE__*/_jsxs(Toolbar,{children:[user&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Avatar,{src:user.profilePictureLink,alt:\"Profile\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",sx:{flexGrow:1,marginLeft:2},children:user.name})]}),/*#__PURE__*/_jsx(IconButton,{color:\"inherit\",onClick:handleLogout,children:/*#__PURE__*/_jsx(LogoutIcon,{})})]})}),/*#__PURE__*/_jsx(Box,{sx:{marginTop:2},children:/*#__PURE__*/_jsxs(Grid,{container:true,spacing:2,children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"h4\",gutterBottom:true,children:\"Chat History\"}),/*#__PURE__*/_jsx(Button,{variant:\"contained\",color:\"primary\",startIcon:/*#__PURE__*/_jsx(AddIcon,{}),onClick:handleCreateChat,sx:{marginBottom:2},children:\"New Chat\"}),/*#__PURE__*/_jsx(Paper,{elevation:3,children:/*#__PURE__*/_jsx(List,{children:chats.map(chat=>/*#__PURE__*/_jsx(ListItem,{button:true,onClick:()=>handleChatClick(chat.id),children:/*#__PURE__*/_jsx(ListItemText,{primary:chat.name||'Unnamed Chat'})},chat.id))})})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:8,children:selectedChatId?/*#__PURE__*/_jsx(Chat,{chatId:selectedChatId,email:email}):/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textSecondary\",children:\"Select a chat to start messaging\"})})]})})]});};export default ChatHistory;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","axios","auth","AppBar","Toolbar","Avatar","Button","List","ListItem","ListItemText","Typography","Container","Box","IconButton","Paper","Grid","AddIcon","LogoutIcon","Chat","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ChatHistory","_location$state","_auth$currentUser","chats","setChats","user","setUser","selectedChatId","setSelectedChatId","navigate","location","email","state","currentUser","get","then","response","data","catch","error","console","handleChatClick","chatId","handleCreateChat","newChat","name","messages","post","newChatId","id","handleLogout","signOut","maxWidth","children","position","src","profilePictureLink","alt","variant","sx","flexGrow","marginLeft","color","onClick","marginTop","container","spacing","item","xs","gutterBottom","startIcon","marginBottom","elevation","map","chat","button","primary"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/chathistory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { auth } from '../firebase';\nimport {\n    AppBar,\n    Toolbar,\n    Avatar,\n    Button,\n    List,\n    ListItem,\n    ListItemText,\n    Typography,\n    Container,\n    Box,\n    IconButton,\n    Paper,\n    Grid,\n} from '@mui/material';\nimport AddIcon from '@mui/icons-material/Add';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport Chat from './chat';\n\nconst ChatHistory = () => {\n    const [chats, setChats] = useState([]);\n    const [user, setUser] = useState(null);\n    const [selectedChatId, setSelectedChatId] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n    const email = location.state?.email || auth.currentUser?.email;\n\n    useEffect(() => {\n        if (email) {\n            // Fetch user-specific chats when the component mounts\n            axios.get(`http://localhost:8080/chats/user/${email}`)\n                .then(response => {\n                    setChats(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching chats:', error);\n                });\n\n            // Fetch user information\n            axios.get(`http://localhost:8080/users/${email}`)\n                .then(response => {\n                    setUser(response.data);\n                })\n                .catch(error => {\n                    console.error('Error fetching user information:', error);\n                });\n        }\n    }, [email]);\n\n    const handleChatClick = (chatId) => {\n        // Set the selected chat ID\n        setSelectedChatId(chatId);\n    };\n\n    const handleCreateChat = () => {\n        // Create a new chat with null data\n        const newChat = {\n            name: null,\n            messages: []\n        };\n\n        axios.post(`http://localhost:8080/chats/${email}`, newChat)\n            .then(response => {\n                const newChatId = response.data.id;\n                setSelectedChatId(newChatId);\n            })\n            .catch(error => {\n                console.error('Error creating new chat:', error);\n            });\n    };\n\n    const handleLogout = () => {\n        auth.signOut().then(() => {\n            navigate('/login');\n        });\n    };\n\n    return (\n        <Container maxWidth=\"lg\">\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {user && (\n                        <>\n                            <Avatar src={user.profilePictureLink} alt=\"Profile\" />\n                            <Typography variant=\"h6\" sx={{ flexGrow: 1, marginLeft: 2 }}>\n                                {user.name}\n                            </Typography>\n                        </>\n                    )}\n                    <IconButton color=\"inherit\" onClick={handleLogout}>\n                        <LogoutIcon />\n                    </IconButton>\n                </Toolbar>\n            </AppBar>\n            <Box sx={{ marginTop: 2 }}>\n                <Grid container spacing={2}>\n                    <Grid item xs={4}>\n                        <Typography variant=\"h4\" gutterBottom>\n                            Chat History\n                        </Typography>\n                        <Button\n                            variant=\"contained\"\n                            color=\"primary\"\n                            startIcon={<AddIcon />}\n                            onClick={handleCreateChat}\n                            sx={{ marginBottom: 2 }}\n                        >\n                            New Chat\n                        </Button>\n                        <Paper elevation={3}>\n                            <List>\n                                {chats.map(chat => (\n                                    <ListItem button key={chat.id} onClick={() => handleChatClick(chat.id)}>\n                                        <ListItemText primary={chat.name || 'Unnamed Chat'} />\n                                    </ListItem>\n                                ))}\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={8}>\n                        {selectedChatId ? (\n                            <Chat chatId={selectedChatId} email={email} />\n                        ) : (\n                            <Typography variant=\"h6\" color=\"textSecondary\">\n                                Select a chat to start messaging\n                            </Typography>\n                        )}\n                    </Grid>\n                </Grid>\n            </Box>\n        </Container>\n    );\n};\n\nexport default ChatHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}