{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5mooTHdMNegPVehYEiVWj46wmhMfq_Ns\",\n  authDomain: \"attendance--tracker.firebaseapp.com\",\n  projectId: \"attendance--tracker\",\n  storageBucket: \"attendance--tracker.firebasestorage.app\",\n  messagingSenderId: \"518253402297\",\n  appId: \"1:518253402297:web:e5b76630305c85ca5e6368\",\n  measurementId: \"G-N3BTNMCZ6Q\"\n};\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\nconst signInWithGoogle = async () => {\n  try {\n    const result = await signInWithPopup(auth, provider);\n    return result.user;\n  } catch (error) {\n    console.error(\"Google Sign-in Error:\", error);\n    return null;\n  }\n};\nexport { auth, signInWithGoogle };","map":{"version":3,"names":["initializeApp","getAuth","GoogleAuthProvider","signInWithPopup","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","auth","provider","signInWithGoogle","result","user","error","console"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/firebase.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from \"firebase/auth\";\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB5mooTHdMNegPVehYEiVWj46wmhMfq_Ns\",\n  authDomain: \"attendance--tracker.firebaseapp.com\",\n  projectId: \"attendance--tracker\",\n  storageBucket: \"attendance--tracker.firebasestorage.app\",\n  messagingSenderId: \"518253402297\",\n  appId: \"1:518253402297:web:e5b76630305c85ca5e6368\",\n  measurementId: \"G-N3BTNMCZ6Q\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\nconst signInWithGoogle = async () => {\n    try {\n        const result = await signInWithPopup(auth, provider);\n        return result.user;\n    } catch (error) {\n        console.error(\"Google Sign-in Error:\", error);\n        return null;\n    }\n};\n\nexport { auth, signInWithGoogle };"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SAASC,OAAO,EAAEC,kBAAkB,EAAEC,eAAe,QAAQ,eAAe;;AAE5E;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,qCAAqC;EACjDC,SAAS,EAAE,qBAAqB;EAChCC,aAAa,EAAE,yCAAyC;EACxDC,iBAAiB,EAAE,cAAc;EACjCC,KAAK,EAAE,2CAA2C;EAClDC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,GAAG,GAAGZ,aAAa,CAACI,cAAc,CAAC;AACzC,MAAMS,IAAI,GAAGZ,OAAO,CAACW,GAAG,CAAC;AACzB,MAAME,QAAQ,GAAG,IAAIZ,kBAAkB,CAAC,CAAC;AAEzC,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACjC,IAAI;IACA,MAAMC,MAAM,GAAG,MAAMb,eAAe,CAACU,IAAI,EAAEC,QAAQ,CAAC;IACpD,OAAOE,MAAM,CAACC,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,OAAO,IAAI;EACf;AACJ,CAAC;AAED,SAASL,IAAI,EAAEE,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}