{"ast":null,"code":"var _jsxFileName = \"E:\\\\Learning platform\\\\React-frontend\\\\src\\\\Contexts\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(() => {\n    // Retrieve user data from localStorage if it exists\n    const savedUser = localStorage.getItem('user');\n    return savedUser ? JSON.parse(savedUser) : null;\n  });\n  useEffect(() => {\n    // Save user data to localStorage whenever it changes\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      setUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(UserProvider, \"26xnBnxzros8WkfFLfWzxClacU8=\");\n_c = UserProvider;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","savedUser","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Learning platform/React-frontend/src/Contexts/User.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n    const [user, setUser] = useState(() => {\n        // Retrieve user data from localStorage if it exists\n        const savedUser = localStorage.getItem('user');\n        return savedUser ? JSON.parse(savedUser) : null;\n    });\n\n    useEffect(() => {\n        // Save user data to localStorage whenever it changes\n        if (user) {\n            localStorage.setItem('user', JSON.stringify(user));\n        } else {\n            localStorage.removeItem('user');\n        }\n    }, [user]);\n\n    return (\n        <UserContext.Provider value={{ user, setUser }}>\n            {children}\n        </UserContext.Provider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,MAAM;IACnC;IACA,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,IAAI;EACnD,CAAC,CAAC;EAEFT,SAAS,CAAC,MAAM;IACZ;IACA,IAAIO,IAAI,EAAE;MACNG,YAAY,CAACI,OAAO,CAAC,MAAM,EAAEF,IAAI,CAACG,SAAS,CAACR,IAAI,CAAC,CAAC;IACtD,CAAC,MAAM;MACHG,YAAY,CAACM,UAAU,CAAC,MAAM,CAAC;IACnC;EACJ,CAAC,EAAE,CAACT,IAAI,CAAC,CAAC;EAEV,oBACIL,OAAA,CAACC,WAAW,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,IAAI;MAAEC;IAAQ,CAAE;IAAAH,QAAA,EAC1CA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAChB,EAAA,CArBWF,YAAY;AAAAmB,EAAA,GAAZnB,YAAY;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}