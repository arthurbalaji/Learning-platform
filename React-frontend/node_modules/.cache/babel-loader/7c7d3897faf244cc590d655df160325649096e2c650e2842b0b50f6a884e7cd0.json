{"ast":null,"code":"var _jsxFileName = \"E:\\\\Chatbot(Meta Llama 3.1 8B)\\\\React-frontend\\\\src\\\\components\\\\login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithPopup } from 'firebase/auth';\nimport { auth, provider } from '../firebase';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (auth.currentUser) {\n      navigate('/chathistory', {\n        state: {\n          email: auth.currentUser.email\n        }\n      });\n    }\n  }, [navigate]);\n  const handleGoogleLogin = async () => {\n    try {\n      const result = await signInWithPopup(auth, provider);\n      const user = result.user;\n      const {\n        displayName,\n        email,\n        photoURL\n      } = user;\n\n      // Check if user exists\n      const userExistsResponse = await axios.get(`http://localhost:8080/users/exists/${email}`);\n      const userExists = userExistsResponse.data;\n      if (!userExists) {\n        // User does not exist, create new user\n        const newUser = {\n          mailId: email,\n          name: displayName,\n          profilePictureLink: photoURL\n        };\n        await axios.post('http://localhost:8080/users', newUser);\n      }\n\n      // Navigate to chat history with user email\n      navigate('/chathistory', {\n        state: {\n          email\n        }\n      });\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoogleLogin,\n      children: \"Login with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"vfTDrq04+XWAcK/v1uBZBP2N3Is=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","signInWithPopup","auth","provider","axios","jsxDEV","_jsxDEV","Login","_s","error","setError","navigate","currentUser","state","email","handleGoogleLogin","result","user","displayName","photoURL","userExistsResponse","get","userExists","data","newUser","mailId","name","profilePictureLink","post","message","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","_c","$RefreshReg$"],"sources":["E:/Chatbot(Meta Llama 3.1 8B)/React-frontend/src/components/login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { signInWithPopup } from 'firebase/auth';\nimport { auth, provider } from '../firebase';\nimport axios from 'axios';\n\nconst Login = () => {\n    const [error, setError] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        if (auth.currentUser) {\n            navigate('/chathistory', { state: { email: auth.currentUser.email } });\n        }\n    }, [navigate]);\n\n    const handleGoogleLogin = async () => {\n        try {\n            const result = await signInWithPopup(auth, provider);\n            const user = result.user;\n            const { displayName, email, photoURL } = user;\n\n            // Check if user exists\n            const userExistsResponse = await axios.get(`http://localhost:8080/users/exists/${email}`);\n            const userExists = userExistsResponse.data;\n\n            if (!userExists) {\n                // User does not exist, create new user\n                const newUser = {\n                    mailId: email,\n                    name: displayName,\n                    profilePictureLink: photoURL\n                };\n                await axios.post('http://localhost:8080/users', newUser);\n            }\n\n            // Navigate to chat history with user email\n            navigate('/chathistory', { state: { email } });\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <div>\n            <h1>Login</h1>\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n            <button onClick={handleGoogleLogin}>Login with Google</button>\n        </div>\n    );\n};\n\nexport default Login;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,eAAe;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,aAAa;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMa,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ,IAAIG,IAAI,CAACU,WAAW,EAAE;MAClBD,QAAQ,CAAC,cAAc,EAAE;QAAEE,KAAK,EAAE;UAAEC,KAAK,EAAEZ,IAAI,CAACU,WAAW,CAACE;QAAM;MAAE,CAAC,CAAC;IAC1E;EACJ,CAAC,EAAE,CAACH,QAAQ,CAAC,CAAC;EAEd,MAAMI,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,MAAM,GAAG,MAAMf,eAAe,CAACC,IAAI,EAAEC,QAAQ,CAAC;MACpD,MAAMc,IAAI,GAAGD,MAAM,CAACC,IAAI;MACxB,MAAM;QAAEC,WAAW;QAAEJ,KAAK;QAAEK;MAAS,CAAC,GAAGF,IAAI;;MAE7C;MACA,MAAMG,kBAAkB,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,sCAAsCP,KAAK,EAAE,CAAC;MACzF,MAAMQ,UAAU,GAAGF,kBAAkB,CAACG,IAAI;MAE1C,IAAI,CAACD,UAAU,EAAE;QACb;QACA,MAAME,OAAO,GAAG;UACZC,MAAM,EAAEX,KAAK;UACbY,IAAI,EAAER,WAAW;UACjBS,kBAAkB,EAAER;QACxB,CAAC;QACD,MAAMf,KAAK,CAACwB,IAAI,CAAC,6BAA6B,EAAEJ,OAAO,CAAC;MAC5D;;MAEA;MACAb,QAAQ,CAAC,cAAc,EAAE;QAAEE,KAAK,EAAE;UAAEC;QAAM;MAAE,CAAC,CAAC;IAClD,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAACoB,OAAO,CAAC;IAC3B;EACJ,CAAC;EAED,oBACIvB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACbzB,KAAK,iBAAIH,OAAA;MAAG6B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAErB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjD5B,OAAA;MAAQ+B,OAAO,EAAEtB,iBAAkB;MAAAe,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEd,CAAC;AAAC1B,EAAA,CA5CID,KAAK;EAAA,QAEUP,WAAW;AAAA;AAAAsC,EAAA,GAF1B/B,KAAK;AA8CX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}