{"ast":null,"code":"var _jsxFileName = \"E:\\\\Attendance SAAS\\\\attendance-tracker-frontend\\\\src\\\\components\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography, TextField, Box } from '@mui/material';\nimport { auth, googleProvider, signInWithPopup } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginComponent = () => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [user, setUser] = useState(null); // Store user data after login\n  const [additionalData, setAdditionalData] = useState({\n    department: '',\n    yearOfStudy: '',\n    rollNo: ''\n  }); // New user data state\n  const [isNewUser, setIsNewUser] = useState(false); // State to check if the user is new\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Check if user is already logged in when component mounts\n    const checkUser = auth.currentUser;\n    if (checkUser) {\n      navigate('/dashboard'); // Redirect to dashboard if already logged in\n    }\n  }, [navigate]);\n  const handleLogin = async () => {\n    setLoading(true); // Show loading spinner\n    try {\n      // Trigger the Google login popup\n      const result = await signInWithPopup(auth, googleProvider);\n      const user = result.user;\n\n      // Prepare user data for backend (Spring Boot)\n      const userData = {\n        googleAuthId: user.uid // Use Google Auth ID as the unique identifier\n      };\n\n      // Send user data to the backend (Spring Boot) to check if user is new or existing\n      const response = await axios.post('http//localhost:1/api/user/signup', userData);\n      if (response.status === 200) {\n        if (response.data.isNewUser) {\n          // If the user is new, set the user state and allow them to provide additional data\n          setUser(response.data); // Store user data in state\n          setIsNewUser(true); // Indicate that the user is new\n        } else {\n          // If the user exists, directly redirect to dashboard\n          navigate('/dashboard');\n        }\n      } else {\n        setError('Failed to log in. Please try again.');\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      setError('Failed to log in. Please try again.');\n    } finally {\n      setLoading(false); // Hide loading spinner\n    }\n  };\n  const handleAdditionalDataChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setAdditionalData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleCompleteRegistration = async () => {\n    setLoading(true);\n    try {\n      // Send additional user data to backend\n      const completeUserData = {\n        ...user,\n        // Existing user data from login\n        ...additionalData // Additional data from form fields\n      };\n      const response = await axios.post('/api/user/complete-registration', completeUserData);\n      if (response.status === 200) {\n        // Redirect to dashboard after successful registration completion\n        navigate('/dashboard');\n      } else {\n        setError('Failed to complete registration. Please try again.');\n      }\n    } catch (error) {\n      console.error('Registration completion error:', error);\n      setError('Failed to complete registration. Please try again.');\n    } finally {\n      setLoading(false); // Hide loading spinner\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: 'center',\n      marginTop: '50px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      children: \"Login to Your Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleLogin,\n        disabled: loading,\n        style: {\n          padding: '10px 30px'\n        },\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          style: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this) : 'Login with Google'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"error\",\n      style: {\n        marginTop: '20px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 17\n    }, this), isNewUser && /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        marginTop: '30px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Complete Your Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Department\",\n        name: \"department\",\n        value: additionalData.department,\n        onChange: handleAdditionalDataChange,\n        fullWidth: true,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Year of Study\",\n        name: \"yearOfStudy\",\n        value: additionalData.yearOfStudy,\n        onChange: handleAdditionalDataChange,\n        fullWidth: true,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Roll Number\",\n        name: \"rollNo\",\n        value: additionalData.rollNo,\n        onChange: handleAdditionalDataChange,\n        fullWidth: true,\n        style: {\n          marginTop: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: handleCompleteRegistration,\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            style: {\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 33\n          }, this) : 'Complete Registration'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(LoginComponent, \"s59rIxIysyFCks+Hil5KKddraZk=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginComponent;\nexport default LoginComponent;\nvar _c;\n$RefreshReg$(_c, \"LoginComponent\");","map":{"version":3,"names":["React","useEffect","useState","Button","CircularProgress","Typography","TextField","Box","auth","googleProvider","signInWithPopup","useNavigate","axios","jsxDEV","_jsxDEV","LoginComponent","_s","loading","setLoading","error","setError","user","setUser","additionalData","setAdditionalData","department","yearOfStudy","rollNo","isNewUser","setIsNewUser","navigate","checkUser","currentUser","handleLogin","result","userData","googleAuthId","uid","response","post","status","data","console","handleAdditionalDataChange","e","name","value","target","prevData","handleCompleteRegistration","completeUserData","style","textAlign","marginTop","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","color","onClick","disabled","padding","size","sx","label","onChange","fullWidth","_c","$RefreshReg$"],"sources":["E:/Attendance SAAS/attendance-tracker-frontend/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, CircularProgress, Typography, TextField, Box } from '@mui/material';\nimport { auth, googleProvider, signInWithPopup } from '../firebase'; // Firebase configuration file\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios'; // Axios for making HTTP requests\n\nconst LoginComponent = () => {\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [user, setUser] = useState(null); // Store user data after login\n    const [additionalData, setAdditionalData] = useState({ department: '', yearOfStudy: '', rollNo: '' }); // New user data state\n    const [isNewUser, setIsNewUser] = useState(false); // State to check if the user is new\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Check if user is already logged in when component mounts\n        const checkUser = auth.currentUser;\n        if (checkUser) {\n            navigate('/dashboard'); // Redirect to dashboard if already logged in\n        }\n    }, [navigate]);\n\n    const handleLogin = async () => {\n        setLoading(true); // Show loading spinner\n        try {\n            // Trigger the Google login popup\n            const result = await signInWithPopup(auth, googleProvider);\n            const user = result.user;\n\n            // Prepare user data for backend (Spring Boot)\n            const userData = {\n                googleAuthId: user.uid, // Use Google Auth ID as the unique identifier\n            };\n\n            // Send user data to the backend (Spring Boot) to check if user is new or existing\n            const response = await axios.post('http//localhost:1/api/user/signup', userData);\n\n            if (response.status === 200) {\n                if (response.data.isNewUser) {\n                    // If the user is new, set the user state and allow them to provide additional data\n                    setUser(response.data); // Store user data in state\n                    setIsNewUser(true); // Indicate that the user is new\n                } else {\n                    // If the user exists, directly redirect to dashboard\n                    navigate('/dashboard');\n                }\n            } else {\n                setError('Failed to log in. Please try again.');\n            }\n        } catch (error) {\n            console.error('Login error:', error);\n            setError('Failed to log in. Please try again.');\n        } finally {\n            setLoading(false); // Hide loading spinner\n        }\n    };\n\n    const handleAdditionalDataChange = (e) => {\n        const { name, value } = e.target;\n        setAdditionalData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    const handleCompleteRegistration = async () => {\n        setLoading(true);\n        try {\n            // Send additional user data to backend\n            const completeUserData = {\n                ...user, // Existing user data from login\n                ...additionalData, // Additional data from form fields\n            };\n\n            const response = await axios.post('/api/user/complete-registration', completeUserData);\n\n            if (response.status === 200) {\n                // Redirect to dashboard after successful registration completion\n                navigate('/dashboard');\n            } else {\n                setError('Failed to complete registration. Please try again.');\n            }\n        } catch (error) {\n            console.error('Registration completion error:', error);\n            setError('Failed to complete registration. Please try again.');\n        } finally {\n            setLoading(false); // Hide loading spinner\n        }\n    };\n\n    return (\n        <div style={{ textAlign: 'center', marginTop: '50px' }}>\n            <Typography variant=\"h4\">Login to Your Account</Typography>\n            <div style={{ marginTop: '20px' }}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleLogin}\n                    disabled={loading}\n                    style={{ padding: '10px 30px' }}\n                >\n                    {loading ? (\n                        <CircularProgress size={24} style={{ color: 'white' }} />\n                    ) : (\n                        'Login with Google'\n                    )}\n                </Button>\n            </div>\n            {error && (\n                <Typography color=\"error\" style={{ marginTop: '20px' }}>\n                    {error}\n                </Typography>\n            )}\n\n            {/* New user registration form */}\n            {isNewUser && (\n                <Box sx={{ marginTop: '30px' }}>\n                    <Typography variant=\"h6\">Complete Your Registration</Typography>\n                    <TextField\n                        label=\"Department\"\n                        name=\"department\"\n                        value={additionalData.department}\n                        onChange={handleAdditionalDataChange}\n                        fullWidth\n                        style={{ marginTop: '10px' }}\n                    />\n                    <TextField\n                        label=\"Year of Study\"\n                        name=\"yearOfStudy\"\n                        value={additionalData.yearOfStudy}\n                        onChange={handleAdditionalDataChange}\n                        fullWidth\n                        style={{ marginTop: '10px' }}\n                    />\n                    <TextField\n                        label=\"Roll Number\"\n                        name=\"rollNo\"\n                        value={additionalData.rollNo}\n                        onChange={handleAdditionalDataChange}\n                        fullWidth\n                        style={{ marginTop: '10px' }}\n                    />\n                    <div style={{ marginTop: '20px' }}>\n                        <Button\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            onClick={handleCompleteRegistration}\n                            disabled={loading}\n                        >\n                            {loading ? (\n                                <CircularProgress size={24} style={{ color: 'white' }} />\n                            ) : (\n                                'Complete Registration'\n                            )}\n                        </Button>\n                    </div>\n                </Box>\n            )}\n        </div>\n    );\n};\n\nexport default LoginComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}